openapi: 3.0.0
info:
  title: dabih-api
  version: 1.0-SNAPSHOT
  description: This is the REST api for the DABIH service by TrinnVis.
security:
  - UserSecurity: []
servers:
  - url: 'https://app-api.trinnvis.no/'
tags:
  - name: accounts
    description: >-
      Operations for user to create or log in and to fetch information about
      organizations
  - name: issues-app
    description: Operations for used by the issues app
  - name: ticks
    description: Operations for scheduled tasks
  - name: tokens
    description: Operations for api access by third party applications
  - name: organizations
    description: Operations for top level access to organization
  - name: computers
    description: Operations for organization computers
  - name: constitutionalDocuments
    description: Operations for organization constitutional documents
  - name: contracts
    description: Operations for organization contracts
  - name: documents
    description: Operations for organization documents
  - name: employees
    description: Operations for organization employees
  - name: functions
    description: Operations for organization functions
  - name: guidelines
    description: Operations for organization guidelines
  - name: partners
    description: Operations for organization partners
  - name: reports
    description: Operations for organization reports
  - name: qualityReviews
    description: Operations for organization qualityReviews
  - name: riskAssessments
    description: Operations for organization riskAssessments
  - name: assets
    description: Operations for organization assets
  - name: issues
    description: Operations for organization issues
paths:
  /accounts:
    post:
      tags:
        - accounts
      responses:
        default:
          description: ''
      description: Create account for a new user.
      operationId: resource_AccountsResource_post_POST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateMessage'
        required: true
  /accounts/index:
    post:
      tags:
        - accounts
      responses:
        default:
          description: ''
      description: Upload index for all the entities in specified organization.
      operationId: resource_AccountsResource_postIndex_POST
  /accounts/login:
    get:
      tags:
        - accounts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLoginViewModel'
      description: >-
        Creates a jwt link like we send to the user in the emails and redirects
        to that link.
      operationId: resource_AccountsResource_login_GET
      parameters:
        - name: id
          in: query
          description: user organization id
          schema:
            format: int32
            type: integer
        - name: userEmail
          in: query
          description: user email address
          schema:
            type: string
  /accounts/search:
    get:
      tags:
        - accounts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountEmployeeViewModel'
      description: Fetch details of matching accounts.
      operationId: resource_AccountsResource_search_GET
      parameters:
        - name: q
          in: query
          description: query parameters
          schema:
            type: string
  /accounts/status:
    get:
      tags:
        - accounts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatusViewModel'
      description: Query account status.
      operationId: resource_AccountsResource_status_GET
  /accounts/token:
    get:
      tags:
        - accounts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResult'
      operationId: resource_AccountsResource_token_GET
      parameters:
        - name: t
          in: query
          schema:
            type: string
  /accounts/update-template:
    post:
      tags:
        - accounts
      responses:
        default:
          description: ''
      description: Upload index for all the entities in specified organization.
      operationId: resource_AccountsResource_postUpdateTemplate_POST
  '/accounts/{accountEmailOrId}':
    get:
      tags:
        - accounts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountViewModel'
      description: >-
        Fetches the list of organizations that the current authenticatedUser has
        access to.
      operationId: resource_AccountsResource_get_GET
    put:
      tags:
        - accounts
      responses:
        default:
          description: ''
      description: Updates the account password.
      operationId: resource_AccountsResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateMessage'
        required: true
    parameters:
      - name: accountEmailOrId
        in: path
        required: true
        schema:
          type: string
        description: >-
          The username of the current authenticatedUser (email) or the numeric
          id of the current users account.
  '/accounts/{accountEmailOrId}/organizations':
    get:
      tags:
        - accounts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountViewModel'
      description: >-
        This is the same as the normal get routine except that we return 412
        Preconditions failed instead of 401.
      operationId: resource_AccountsResource_getOrganizations_GET
    parameters:
      - name: accountEmailOrId
        in: path
        required: true
        schema:
          type: string
        description: >-
          The username of the current authenticatedUser (email) or the numeric
          id of the current users account.
  '/accounts/{accountId}':
    delete:
      tags:
        - accounts
      responses:
        default:
          description: ''
      description: This endpoint is used to update account status.
      operationId: resource_AccountsResource_delete_DELETE
      parameters:
        - name: username
          in: query
          description: account status update message
          schema:
            type: string
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
        description: account id
  '/accounts/{accountId}/status':
    put:
      tags:
        - accounts
      responses:
        default:
          description: ''
      description: This endpoint is used to update account status.
      operationId: resource_AccountsResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountStatusUpdateMessage'
        required: true
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
        description: account id
  '/accounts/{accountId}/user':
    post:
      tags:
        - accounts
      security: []
      responses:
        default:
          description: ''
      operationId: resource_AccountsResource_user_POST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateMessage'
        required: true
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
        description: account id
  '/accounts/{accountId}/invoice':
    post:
      tags:
        - accounts
      responses:
        default:
          description: ''
      operationId: resource_AccountsResource_invoice_POST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceMessage'
        required: true
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
        description: account id
  '/accounts/{accountEmail}/accountStatus':
    get:
      tags:
        - accounts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageViewModel'
      description: Check if the user already exist or not for specified account email.
      operationId: resource_AccountsResource_accountStatus_GET
    parameters:
      - name: accountEmail
        in: path
        required: true
        schema:
          type: string
        description: The account email
  '/accounts/{userEmail}/passwordRequest':
    post:
      tags:
        - accounts
      security: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageViewModel'
      description: Sends a new password to the users email if it matches a current user.
      operationId: resource_AccountsResource_postPasswordRequest_POST
    parameters:
      - name: userEmail
        in: path
        required: true
        schema:
          type: string
        description: |
          The username of the current user (email)

          Request new user password
  /accounts/feedback:
    post:
      tags:
        - accounts
      responses:
        default:
          description: ''
      description: Send user feedback to admin.
      operationId: resource_AccountsResource_postFeedback_POST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackMessage'
        required: true
  /issues:
    put:
      tags:
        - issues-app
      responses:
        default:
          description: ''
      description: Create an simple issue to the new system or the old system.
      operationId: resource_IssuesResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssuesRequest'
        required: true
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
  /issues/passwordRequest:
    post:
      tags:
        - issues-app
      security: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageViewModel'
      description: 'Returns password for a user, it works for both new user and old user.'
      operationId: resource_IssuesResource_postPasswordRequest_POST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordRequest'
        required: true
  /issues/organizations:
    get:
      tags:
        - issues-app
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountViewModel'
      description: >-
        Returns organization information for a user, it works for both new user
        and old user.
      operationId: resource_IssuesResource_getOrganizations_GET
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
  /ticks/renewals:
    post:
      tags:
        - ticks
      responses:
        default:
          description: ''
      operationId: resource_TicksResource_postRenewals_POST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledTimeMessage'
        required: true
  /ticks/reschedule:
    post:
      tags:
        - ticks
      responses:
        default:
          description: ''
      description: This endpoint is used to reschedule.
      operationId: resource_TicksResource_reschedule_POST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledTimeMessage'
        required: true
  /ticks/summaries:
    post:
      tags:
        - ticks
      responses:
        default:
          description: ''
      description: This endpoint is used to send summary.
      operationId: resource_TicksResource_summaries_POST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledTimeMessage'
        required: true
  /ticks/update-mail-chimp:
    post:
      tags:
        - ticks
      responses:
        default:
          description: ''
      description: |
        This endpoint is used to copy users from the old system so they

        can log in using the new syste in order to upgrade


        Only old accounts with email ending in @mailinator.
      operationId: resource_TicksResource_transferUsers_POST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledTimeMessage'
        required: true
  /ticks/index-admin-search:
    post:
      tags:
        - ticks
      responses:
        default:
          description: ''
      description: |
        This endpoint is used to copy users from the old system so they

        can log in using the new syste in order to upgrade


        Only old accounts with email ending in @mailinator.
      operationId: resource_TicksResource_transferUsers_POST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledTimeMessage'
        required: true
  /ticks/status:
    post:
      tags:
        - ticks
      responses:
        default:
          description: ''
      description: |
        This endpoint is used to copy users from the old system so they

        can log in using the new syste in order to upgrade


        Only old accounts with email ending in @mailinator.
      operationId: resource_TicksResource_transferUsers_POST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledTimeMessage'
        required: true
  /ticks/reminders:
    post:
      tags:
        - ticks
      responses:
        default:
          description: ''
      description: This endpoint is used to send reminder.
      operationId: resource_TicksResource_reminders_POST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledTimeMessage'
        required: true
  /organizations:
    post:
      tags:
        - organizations
      responses:
        default:
          description: ''
      description: Create a account for an existing user.
      operationId: resource_OrganizationsResource_post_POST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreateMessage'
        required: true
  '/organizations/{organizationId}':
    get:
      tags:
        - organizations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationViewModel'
      description: Get organization for specified organization id.
      operationId: resource_OrganizationResource_get_GET
    put:
      tags:
        - organizations
      responses:
        default:
          description: ''
      description: Update organization for specified organization id.
      operationId: resource_OrganizationResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUpdateMessage'
        required: true
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/viewer/{path+}':
    get:
      tags:
        - organizations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationViewModel'
      description: Proxy for the accusoft file viewer backend.
      operationId: resource_ViewerResource_get_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/computers':
    get:
      tags:
        - computers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComputerViewModel'
      description: Get all the computers within the specified organization.
      operationId: resource_OrganizationComputerResource_getComputerViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/computers/{entityId}/attachments':
    get:
      tags:
        - computers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationComputerResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/computers/{entityId}/attachments/{fileName}':
    put:
      tags:
        - computers
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationComputerResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/computers/{entityId}/attachments/{attachmentUuid}':
    get:
      tags:
        - computers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationComputerResource_getAttachment_GET
    delete:
      tags:
        - computers
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationComputerResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/computers/{entityId}/attachments/{attachmentUuid}/session':
    get:
      tags:
        - computers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationComputerResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/computers/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      tags:
        - computers
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationComputerResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/computers/{computerId}':
    get:
      tags:
        - computers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputerViewModel'
      description: Get the computer with the specified computer id.
      operationId: resource_OrganizationComputerResource_getComputerViewModel_GET
    put:
      tags:
        - computers
      responses:
        default:
          description: ''
      description: >-
        Update or create computer with the specified computer id, and the search
        index for the computer will also be updated or created.
      operationId: resource_OrganizationComputerResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputerUpdateMessage'
        required: true
    delete:
      tags:
        - computers
      responses:
        default:
          description: ''
      description: >-
        Delete computer with the specified computer id, the search index of the
        computer will also be deleted.
      operationId: resource_OrganizationComputerResource_delete_DELETE
    parameters:
      - name: computerId
        in: path
        required: true
        schema:
          type: string
        description: The existing computer uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/constitutionalDocuments':
    get:
      tags:
        - constitutionalDocuments
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConstitutionalDocumentViewModel'
      description: Get all the constitutionalDocuments within the specified organization.
      operationId: >-
        resource_OrganizationConstitutionalDocumentResource_getConstitutionalDocumentViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/constitutionalDocuments/{entityId}/attachments':
    get:
      tags:
        - constitutionalDocuments
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationConstitutionalDocumentResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/constitutionalDocuments/{entityId}/attachments/{fileName}':
    put:
      tags:
        - constitutionalDocuments
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationConstitutionalDocumentResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/constitutionalDocuments/{entityId}/attachments/{attachmentUuid}':
    get:
      tags:
        - constitutionalDocuments
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationConstitutionalDocumentResource_getAttachment_GET
    delete:
      tags:
        - constitutionalDocuments
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: >-
        resource_OrganizationConstitutionalDocumentResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/constitutionalDocuments/{entityId}/attachments/{attachmentUuid}/session':
    get:
      tags:
        - constitutionalDocuments
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: >-
        resource_OrganizationConstitutionalDocumentResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/constitutionalDocuments/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      tags:
        - constitutionalDocuments
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationConstitutionalDocumentResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/constitutionalDocuments/{constitutionalDocumentId}':
    get:
      tags:
        - constitutionalDocuments
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstitutionalDocumentViewModel'
      description: >-
        Get the constitutionalDocument with the specified constitutionalDocument
        id.
      operationId: >-
        resource_OrganizationConstitutionalDocumentResource_getConstitutionalDocumentViewModel_GET
    put:
      tags:
        - constitutionalDocuments
      responses:
        default:
          description: ''
      description: >
        Update or create constitutionalDocument with the specified
        constitutionalDocument id, the relate partners, employees and pages for
        the constitutionalDocument will also be updated or created,


        and the search index for the constitutionalDocument will also be updated
        or created.
      operationId: resource_OrganizationConstitutionalDocumentResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConstitutionalDocumentUpdateMessage'
        required: true
    delete:
      tags:
        - constitutionalDocuments
      responses:
        default:
          description: ''
      description: >-
        Delete constitutionalDocument with the specified constitutionalDocument
        id, the search index of the constitutionalDocument will also be deleted.
      operationId: resource_OrganizationConstitutionalDocumentResource_delete_DELETE
    parameters:
      - name: constitutionalDocumentId
        in: path
        required: true
        schema:
          type: string
        description: The existing constitutionalDocument uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/constitutionalDocuments/{constitutionalDocumentId}/revisions':
    get:
      tags:
        - constitutionalDocuments
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RevisionViewModel'
      operationId: resource_OrganizationConstitutionalDocumentResource_getRevisions_GET
    parameters:
      - name: constitutionalDocumentId
        in: path
        required: true
        schema:
          type: string
        description: The existing constitutionalDocument uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/contracts':
    get:
      tags:
        - contracts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractViewModel'
      description: Get all the contracts within the specified organization.
      operationId: resource_OrganizationContractResource_getContractViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/contracts/{entityId}/attachments':
    get:
      tags:
        - contracts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationContractResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/contracts/{entityId}/attachments/{fileName}':
    put:
      tags:
        - contracts
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationContractResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/contracts/{entityId}/attachments/{attachmentUuid}':
    get:
      tags:
        - contracts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationContractResource_getAttachment_GET
    delete:
      tags:
        - contracts
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationContractResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/contracts/{entityId}/attachments/{attachmentUuid}/session':
    get:
      tags:
        - contracts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationContractResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/contracts/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      tags:
        - contracts
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationContractResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/contracts/{contractId}':
    get:
      tags:
        - contracts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractViewModel'
      description: Get the contract with the specified contract id.
      operationId: resource_OrganizationContractResource_getContractViewModel_GET
    put:
      tags:
        - contracts
      responses:
        default:
          description: ''
      description: >
        Update or create contract with the specified contract id, the relate
        partners, employees and pages for the contract will also be updated or
        created,


        and the search index for the contract will also be updated or created.
      operationId: resource_OrganizationContractResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractUpdateMessage'
        required: true
    delete:
      tags:
        - contracts
      responses:
        default:
          description: ''
      description: >-
        Delete contract with the specified contract id, the search index of the
        contract will also be deleted.
      operationId: resource_OrganizationContractResource_delete_DELETE
    parameters:
      - name: contractId
        in: path
        required: true
        schema:
          type: string
        description: The existing contract uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/contracts/{contractId}/revisions':
    get:
      tags:
        - contracts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RevisionViewModel'
      operationId: resource_OrganizationContractResource_getRevisions_GET
    parameters:
      - name: contractId
        in: path
        required: true
        schema:
          type: string
        description: The existing contract uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/documents':
    get:
      tags:
        - documents
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentViewModel'
      description: Get all the documents within the specified organization.
      operationId: resource_OrganizationDocumentResource_getDocumentViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/documents/{entityId}/attachments':
    get:
      tags:
        - documents
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationDocumentResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/documents/{entityId}/attachments/{fileName}':
    put:
      tags:
        - documents
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationDocumentResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/documents/{entityId}/attachments/{attachmentUuid}':
    get:
      tags:
        - documents
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationDocumentResource_getAttachment_GET
    delete:
      tags:
        - documents
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationDocumentResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/documents/{entityId}/attachments/{attachmentUuid}/session':
    get:
      tags:
        - documents
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationDocumentResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/documents/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      tags:
        - documents
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationDocumentResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/documents/{documentId}':
    get:
      tags:
        - documents
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentViewModel'
      description: Get the document with the specified document id.
      operationId: resource_OrganizationDocumentResource_getDocumentViewModel_GET
    put:
      tags:
        - documents
      responses:
        default:
          description: ''
      description: >-
        Update or create document with the specified document id, and the search
        index for the document will also be updated or created.
      operationId: resource_OrganizationDocumentResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUpdateMessage'
        required: true
    delete:
      tags:
        - documents
      responses:
        default:
          description: ''
      description: >-
        Delete document with the specified document id, the search index of the
        document will also be deleted.
      operationId: resource_OrganizationDocumentResource_delete_DELETE
    parameters:
      - name: documentId
        in: path
        required: true
        schema:
          type: string
        description: The existing document uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/documents/{documentId}/revisions':
    get:
      tags:
        - documents
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RevisionViewModel'
      operationId: resource_OrganizationDocumentResource_getRevisions_GET
    parameters:
      - name: documentId
        in: path
        required: true
        schema:
          type: string
        description: The existing document uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/employees':
    get:
      tags:
        - employees
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeViewModel'
      description: Get all employees for specified organization.
      operationId: resource_OrganizationEmployeeResource_getEmployeeViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/employees/{entityId}/attachments':
    get:
      tags:
        - employees
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationEmployeeResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/employees/{entityId}/attachments/{fileName}':
    put:
      tags:
        - employees
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationEmployeeResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/employees/{entityId}/attachments/{attachmentUuid}':
    get:
      tags:
        - employees
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationEmployeeResource_getAttachment_GET
    delete:
      tags:
        - employees
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationEmployeeResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/employees/{entityId}/attachments/{attachmentUuid}/session':
    get:
      tags:
        - employees
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationEmployeeResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/employees/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      tags:
        - employees
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationEmployeeResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/employees/{employeeId}':
    get:
      tags:
        - employees
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeViewModel'
      description: Get employee for specified employee id within specified organization.
      operationId: resource_OrganizationEmployeeResource_getEmployeeViewModel_GET
    put:
      tags:
        - employees
      responses:
        default:
          description: ''
      description: >-
        Update or create employee with the specified employee id, and the search
        index for the employee will also be updated or created.
      operationId: resource_OrganizationEmployeeResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUpdateMessage'
        required: true
    delete:
      tags:
        - employees
      responses:
        default:
          description: ''
      description: Delete employee for specified employee id.
      operationId: resource_OrganizationEmployeeResource_delete_DELETE
    parameters:
      - name: employeeId
        in: path
        required: true
        schema:
          type: string
        description: The employee uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/externalConnections':
    get:
      tags:
        - computers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExternalConnectionViewModel'
      description: Get all the external connections within the specified organization.
      operationId: >-
        resource_OrganizationExternalConnectionResource_getExternalConnectionViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/externalConnections/{entityId}/attachments':
    get:
      tags:
        - computers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationExternalConnectionResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/externalConnections/{entityId}/attachments/{fileName}':
    put:
      tags:
        - computers
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationExternalConnectionResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/externalConnections/{entityId}/attachments/{attachmentUuid}':
    get:
      tags:
        - computers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationExternalConnectionResource_getAttachment_GET
    delete:
      tags:
        - computers
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationExternalConnectionResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/externalConnections/{entityId}/attachments/{attachmentUuid}/session':
    get:
      tags:
        - computers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationExternalConnectionResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/externalConnections/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      tags:
        - computers
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationExternalConnectionResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/externalConnections/{externalConnectionId}':
    get:
      tags:
        - computers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalConnectionViewModel'
      description: Get the external connection with the specified external connection id.
      operationId: >-
        resource_OrganizationExternalConnectionResource_getExternalConnectionViewModel_GET
    put:
      tags:
        - computers
      responses:
        default:
          description: ''
      description: >-
        Update or create external connection with the specified external
        connection id, and the search index for the external connection will
        also be updated or created.
      operationId: resource_OrganizationExternalConnectionResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalConnectionUpdateMessage'
        required: true
    delete:
      tags:
        - computers
      responses:
        default:
          description: ''
      description: >-
        Delete external connection with the specified external connection id,
        the search index of the external connection will also be deleted.
      operationId: resource_OrganizationExternalConnectionResource_delete_DELETE
    parameters:
      - name: externalConnectionId
        in: path
        required: true
        schema:
          type: string
        description: The existing external connection uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions':
    get:
      tags:
        - functions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FunctionViewModel'
      description: >-
        Get all the functions within the specified organization, employees,
        rotations, pages and tasks also have been included in the function.
      operationId: resource_OrganizationFunctionResource_getFunctionViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}':
    get:
      tags:
        - functions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunctionViewModel'
      description: >-
        Get the function with the specified function id, employees, rotations,
        pages and tasks also have been included in the function.
      operationId: resource_OrganizationFunctionResource_getFunctionViewModel_GET
    put:
      tags:
        - functions
      responses:
        default:
          description: ''
      description: >
        Update or create function with the specified function id, the relate
        employees, rotations and pages for the function will also be updated or
        created,


        and the search index for the function will also be updated or created.
      operationId: resource_OrganizationFunctionResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FunctionUpdateMessage'
        required: true
    delete:
      tags:
        - functions
      responses:
        default:
          description: ''
      description: >-
        Delete function with the specified function id, the search index of the
        function will also be deleted.
      operationId: resource_OrganizationFunctionResource_delete_DELETE
    parameters:
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/tasks':
    get:
      tags:
        - functions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskViewModel'
      description: Get all the tasks within the specified organization and function.
      operationId: resource_OrganizationFunctionTaskResource_getFunctionTaskViewModels_GET
    parameters:
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/tasks/{entityId}/attachments':
    get:
      tags:
        - functions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationFunctionTaskResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/tasks/{entityId}/attachments/{fileName}':
    put:
      tags:
        - functions
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationFunctionTaskResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/tasks/{entityId}/attachments/{attachmentUuid}':
    get:
      tags:
        - functions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationFunctionTaskResource_getAttachment_GET
    delete:
      tags:
        - functions
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationFunctionTaskResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/tasks/{entityId}/attachments/{attachmentUuid}/session':
    get:
      tags:
        - functions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationFunctionTaskResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/tasks/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      tags:
        - functions
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationFunctionTaskResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/tasks/{taskId}':
    get:
      tags:
        - functions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskViewModel'
      description: Get the task with the specified task id.
      operationId: resource_OrganizationFunctionTaskResource_getTaskViewModel_GET
    put:
      tags:
        - functions
      responses:
        default:
          description: ''
      description: >
        Update or create task with the specified task id, the relate schedules
        and pages for the task will also be updated or created,


        and the search index for the task will also be updated or created.
      operationId: resource_OrganizationFunctionTaskResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FunctionTaskUpdateMessage'
        required: true
    delete:
      tags:
        - functions
      responses:
        default:
          description: ''
      description: >-
        Delete task with the specified task id, the search index of the task
        will also be deleted.
      operationId: resource_OrganizationFunctionTaskResource_delete_DELETE
    parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
        description: The existing task uuid
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/tasks/{taskId}/revisions':
    get:
      tags:
        - functions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RevisionViewModel'
      operationId: resource_OrganizationFunctionTaskResource_getRevisions_GET
    parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
        description: The existing task uuid
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/tasks/{taskId}/done':
    post:
      tags:
        - functions
      responses:
        default:
          description: ''
      operationId: resource_OrganizationFunctionTaskResource_done_POST
    parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
        description: The existing task uuid
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/revisions':
    get:
      tags:
        - functions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RevisionViewModel'
      operationId: resource_OrganizationFunctionResource_getRevisions_GET
    parameters:
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{entityId}/attachments':
    get:
      tags:
        - functions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationFunctionResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{entityId}/attachments/{fileName}':
    put:
      tags:
        - functions
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationFunctionResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{entityId}/attachments/{attachmentUuid}':
    get:
      tags:
        - functions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationFunctionResource_getAttachment_GET
    delete:
      tags:
        - functions
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationFunctionResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{entityId}/attachments/{attachmentUuid}/session':
    get:
      tags:
        - functions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationFunctionResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      tags:
        - functions
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationFunctionResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/postpone-tasks':
    post:
      tags:
        - functions
      responses:
        default:
          description: ''
      description: Reschedule tasks.
      operationId: resource_OrganizationFunctionResource_postponeTasks_POST
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/guidelines':
    get:
      tags:
        - guidelines
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GuidelineViewModel'
      description: Get all the guideline within the specified organization.
      operationId: resource_OrganizationGuidelineResource_getGuidelineViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/guidelines/{entityId}/attachments':
    get:
      tags:
        - guidelines
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationGuidelineResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/guidelines/{entityId}/attachments/{fileName}':
    put:
      tags:
        - guidelines
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationGuidelineResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/guidelines/{entityId}/attachments/{attachmentUuid}':
    get:
      tags:
        - guidelines
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationGuidelineResource_getAttachment_GET
    delete:
      tags:
        - guidelines
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationGuidelineResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/guidelines/{entityId}/attachments/{attachmentUuid}/session':
    get:
      tags:
        - guidelines
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationGuidelineResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/guidelines/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      tags:
        - guidelines
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationGuidelineResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/guidelines/{guidelineId}':
    get:
      tags:
        - guidelines
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidelineViewModel'
      description: Get the guideline with the specified guideline id.
      operationId: resource_OrganizationGuidelineResource_getGuidelineViewModel_GET
    put:
      tags:
        - guidelines
      responses:
        default:
          description: ''
      description: >-
        Update or create guideline with the specified guideline id, and the
        search index for the guideline will also be updated or created.
      operationId: resource_OrganizationGuidelineResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuidelineUpdateMessage'
        required: true
    delete:
      tags:
        - guidelines
      responses:
        default:
          description: ''
      description: >-
        Delete guideline with the specified guideline id, the search index of
        the guideline will also be deleted.
      operationId: resource_OrganizationGuidelineResource_delete_DELETE
    parameters:
      - name: guidelineId
        in: path
        required: true
        schema:
          type: string
        description: The existing guideline uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/guidelines/{guidelineId}/revisions':
    get:
      tags:
        - guidelines
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RevisionViewModel'
      operationId: resource_OrganizationGuidelineResource_getRevisions_GET
    parameters:
      - name: guidelineId
        in: path
        required: true
        schema:
          type: string
        description: The existing guideline uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/issues':
    get:
      tags:
        - issues
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IssueViewModel'
      description: Get all the issues within the specified organization.
      operationId: resource_OrganizationIssueResource_getIssueViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/issues/{entityId}/attachments':
    get:
      tags:
        - issues
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationIssueResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/issues/{entityId}/attachments/{fileName}':
    put:
      tags:
        - issues
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationIssueResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/issues/{entityId}/attachments/{attachmentUuid}':
    get:
      tags:
        - issues
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationIssueResource_getAttachment_GET
    delete:
      tags:
        - issues
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationIssueResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/issues/{entityId}/attachments/{attachmentUuid}/session':
    get:
      tags:
        - issues
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationIssueResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/issues/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      tags:
        - issues
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationIssueResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/issues/{issueId}':
    get:
      tags:
        - issues
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueViewModel'
      description: Get the issue with the specified issue id.
      operationId: resource_OrganizationIssueResource_getIssueViewModel_GET
    put:
      tags:
        - issues
      responses:
        default:
          description: ''
      description: Update or create issue with the specified issue id.
      operationId: resource_OrganizationIssueResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueUpdateMessage'
        required: true
    delete:
      tags:
        - issues
      responses:
        default:
          description: ''
      description: >-
        Delete issue with the specified issue id, the search index of the issue
        will also be deleted.
      operationId: resource_OrganizationIssueResource_delete_DELETE
    parameters:
      - name: issueId
        in: path
        required: true
        schema:
          type: string
        description: The existing issue uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/issues/{issueId}/simple':
    put:
      tags:
        - issues
      responses:
        default:
          description: ''
      description: Update or create simple issue with the specified issue id.
      operationId: resource_OrganizationIssueResource_putSimple_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueSimpleUpdateMessage'
        required: true
    parameters:
      - name: issueId
        in: path
        required: true
        schema:
          type: string
        description: The existing issue uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/networks':
    get:
      tags:
        - computers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetworkViewModel'
      description: Get all the networks within the specified organization.
      operationId: resource_OrganizationNetworkResource_getNetworkViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/networks/{entityId}/attachments':
    get:
      tags:
        - computers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationNetworkResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/networks/{entityId}/attachments/{fileName}':
    put:
      tags:
        - computers
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationNetworkResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/networks/{entityId}/attachments/{attachmentUuid}':
    get:
      tags:
        - computers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationNetworkResource_getAttachment_GET
    delete:
      tags:
        - computers
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationNetworkResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/networks/{entityId}/attachments/{attachmentUuid}/session':
    get:
      tags:
        - computers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationNetworkResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/networks/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      tags:
        - computers
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationNetworkResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/networks/{networkId}':
    get:
      tags:
        - computers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkViewModel'
      description: Get the network with the specified network id.
      operationId: resource_OrganizationNetworkResource_getIssueViewModel_GET
    put:
      tags:
        - computers
      responses:
        default:
          description: ''
      description: Update or create network with the specified network id.
      operationId: resource_OrganizationNetworkResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkUpdateMessage'
        required: true
    delete:
      tags:
        - computers
      responses:
        default:
          description: ''
      description: Delete network with the specified network id.
      operationId: resource_OrganizationNetworkResource_delete_DELETE
    parameters:
      - name: networkId
        in: path
        required: true
        schema:
          type: string
        description: The existing network uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/pages':
    get:
      tags:
        - organizations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PageViewModel'
      description: Get pages from word press.
      operationId: resource_OrganizationPageResource_get_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners':
    get:
      tags:
        - partners
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartnerViewModel'
      description: Get all the partners within the specified organization.
      operationId: resource_OrganizationPartnerResource_getPartnerViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{partnerId}':
    get:
      tags:
        - partners
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerViewModel'
      description: Get the partner with the specified partner id.
      operationId: resource_OrganizationPartnerResource_getPartnerViewModel_GET
    put:
      tags:
        - partners
      responses:
        default:
          description: ''
      description: >-
        Update or create partner with the specified partner id, and the search
        index for the partner will also be updated or created.
      operationId: resource_OrganizationPartnerResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerUpdateMessage'
        required: true
    delete:
      tags:
        - partners
      responses:
        default:
          description: ''
      description: >-
        Delete partner with the specified partner id, the search index of the
        partner will also be deleted.
      operationId: resource_OrganizationPartnerResource_delete_DELETE
    parameters:
      - name: partnerId
        in: path
        required: true
        schema:
          type: string
        description: The existing partner uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{partnerId}/contacts':
    get:
      tags:
        - partners
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactPersonViewModel'
      description: Get all the contacts within the specified organization and partner.
      operationId: >-
        resource_OrganizationPartnerContactResource_getContactPersonViewModels_GET
    parameters:
      - name: partnerId
        in: path
        required: true
        schema:
          type: string
        description: The existing partner uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{partnerId}/contacts/{entityId}/attachments':
    get:
      tags:
        - partners
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationPartnerContactResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: partnerId
        in: path
        required: true
        schema:
          type: string
        description: The existing partner uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{partnerId}/contacts/{entityId}/attachments/{fileName}':
    put:
      tags:
        - partners
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationPartnerContactResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: partnerId
        in: path
        required: true
        schema:
          type: string
        description: The existing partner uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{partnerId}/contacts/{entityId}/attachments/{attachmentUuid}':
    get:
      tags:
        - partners
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationPartnerContactResource_getAttachment_GET
    delete:
      tags:
        - partners
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationPartnerContactResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: partnerId
        in: path
        required: true
        schema:
          type: string
        description: The existing partner uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{partnerId}/contacts/{entityId}/attachments/{attachmentUuid}/session':
    get:
      tags:
        - partners
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationPartnerContactResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: partnerId
        in: path
        required: true
        schema:
          type: string
        description: The existing partner uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{partnerId}/contacts/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      tags:
        - partners
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationPartnerContactResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: partnerId
        in: path
        required: true
        schema:
          type: string
        description: The existing partner uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{partnerId}/contacts/{contactId}':
    get:
      tags:
        - partners
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactPersonViewModel'
      description: Get the contact with the specified contact id.
      operationId: >-
        resource_OrganizationPartnerContactResource_getContactPersonViewModel_GET
    put:
      tags:
        - partners
      responses:
        default:
          description: ''
      description: >-
        Update or create contact with the specified contact id, and the search
        index for the contact will also be updated or created.
      operationId: resource_OrganizationPartnerContactResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactPersonUpdateMessage'
        required: true
    delete:
      tags:
        - partners
      responses:
        default:
          description: ''
      description: >-
        Delete contact with the specified contact id, the search index of the
        contact will also be deleted, and invitation will also be updated.
      operationId: resource_OrganizationPartnerContactResource_delete_DELETE
    parameters:
      - name: contactId
        in: path
        required: true
        schema:
          type: string
        description: The existing contact uuid
      - name: partnerId
        in: path
        required: true
        schema:
          type: string
        description: The existing partner uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{entityId}/attachments':
    get:
      tags:
        - partners
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationPartnerResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{entityId}/attachments/{fileName}':
    put:
      tags:
        - partners
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationPartnerResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{entityId}/attachments/{attachmentUuid}':
    get:
      tags:
        - partners
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationPartnerResource_getAttachment_GET
    delete:
      tags:
        - partners
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationPartnerResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{entityId}/attachments/{attachmentUuid}/session':
    get:
      tags:
        - partners
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationPartnerResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      tags:
        - partners
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationPartnerResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/qualityReviews':
    get:
      tags:
        - qualityReviews
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QualityReviewViewModel'
      description: Get all quality reviews within specified organization.
      operationId: resource_OrganizationQualityReviewResource_getQualityReviewResource_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/qualityReviews/{qualityReviewId}':
    get:
      tags:
        - qualityReviews
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityReviewViewModel'
      description: Get quality review within specified organization.
      operationId: resource_OrganizationQualityReviewResource_getQualityReviewViewModel_GET
    put:
      tags:
        - qualityReviews
      responses:
        default:
          description: ''
      description: Update or create quality review with the specified quality review id.
      operationId: resource_OrganizationQualityReviewResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualityUpdateMessage'
        required: true
    delete:
      tags:
        - qualityReviews
      responses:
        default:
          description: ''
      description: Delete specified quality review within specified organization.
      operationId: resource_OrganizationQualityReviewResource_delete_DELETE
    parameters:
      - name: qualityReviewId
        in: path
        required: true
        schema:
          type: string
        description: The quality review uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/qualityReviews/{qualityReviewId}/qualityReviewMainGoals':
    get:
      tags:
        - qualityReviews
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QualityReviewMainGoalViewModel'
      description: >-
        Get all quality review main goals within specified organization and
        specified quality review.
      operationId: >-
        resource_OrganizationQualityReviewMainGoalResource_getQualityReviewMainGoalResource_GET
    parameters:
      - name: qualityReviewId
        in: path
        required: true
        schema:
          type: string
        description: The quality review uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/qualityReviews/{qualityReviewId}/qualityReviewMainGoals/{qualityReviewMainGoalId}':
    get:
      tags:
        - qualityReviews
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityReviewMainGoalViewModel'
      description: >-
        Get quality review main goal for specified quality review main goal id
        within organization and quality review.
      operationId: >-
        resource_OrganizationQualityReviewMainGoalResource_getQualityReviewViewModel_GET
    put:
      tags:
        - qualityReviews
      responses:
        default:
          description: ''
      description: >-
        Update or create quality review main goal with the specified quality
        review main goal id.
      operationId: resource_OrganizationQualityReviewMainGoalResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualityReviewMainGoalUpdateMessage'
        required: true
    delete:
      tags:
        - qualityReviews
      responses:
        default:
          description: ''
      description: >-
        Delete quality review main goal for specified quality review main goal
        id.
      operationId: resource_OrganizationQualityReviewMainGoalResource_delete_DELETE
    parameters:
      - name: qualityReviewMainGoalId
        in: path
        required: true
        schema:
          type: string
        description: The quality review main goal uuid.
      - name: qualityReviewId
        in: path
        required: true
        schema:
          type: string
        description: The quality review uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/qualityReviews/{qualityReviewId}/qualityReviewMainGoals/{qualityReviewMainGoalId}/qualityReviewSubGoals':
    get:
      tags:
        - qualityReviews
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QualityReviewSubGoalViewModel'
      description: >-
        Get all quality review sub goal within specified organization and
        specified quality review and specified quality review main goal.
      operationId: >-
        resource_OrganizationQualityReviewSubGoalResource_getQualityReviewMainGoalResource_GET
    parameters:
      - name: qualityReviewMainGoalId
        in: path
        required: true
        schema:
          type: string
        description: The quality review main goal uuid.
      - name: qualityReviewId
        in: path
        required: true
        schema:
          type: string
        description: The quality review uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/qualityReviews/{qualityReviewId}/qualityReviewMainGoals/{qualityReviewMainGoalId}/qualityReviewSubGoals/{qualityReviewSubGoalId}':
    get:
      tags:
        - qualityReviews
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityReviewSubGoalViewModel'
      description: >-
        Get specified quality review sub goal within specified organization and
        specified quality review and specified quality review main goal.
      operationId: >-
        resource_OrganizationQualityReviewSubGoalResource_getQualityReviewViewModel_GET
    put:
      tags:
        - qualityReviews
      responses:
        default:
          description: ''
      description: >-
        Update or create quality review sub goal with the specified quality
        review sub goal id.
      operationId: resource_OrganizationQualityReviewSubGoalResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualityReviewSubGoalUpdateMessage'
        required: true
    delete:
      tags:
        - qualityReviews
      responses:
        default:
          description: ''
      description: Delete quality review sub goal for specified quality review sub goal id.
      operationId: resource_OrganizationQualityReviewSubGoalResource_delete_DELETE
    parameters:
      - name: qualityReviewSubGoalId
        in: path
        required: true
        schema:
          type: string
        description: The quality review sub goal uuid.
      - name: qualityReviewMainGoalId
        in: path
        required: true
        schema:
          type: string
        description: The quality review main goal uuid.
      - name: qualityReviewId
        in: path
        required: true
        schema:
          type: string
        description: The quality review uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/qualityReviews/{qualityReviewId}/qualityReviewMainGoals/{qualityReviewMainGoalId}/qualityReviewSubGoals/{qualityReviewSubGoalId}/qualityReviewIndicators':
    get:
      tags:
        - qualityReviews
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QualityReviewIndicatorViewModel'
      description: >
        Get all quality review indicators within the specified organization and
        specified quality review


        and specified quality review main goal and specified quality review sub
        goal.
      operationId: >-
        resource_OrganizationQualityReviewIndicatorResource_getQualityReviewIndicatorResource_GET
    parameters:
      - name: qualityReviewSubGoalId
        in: path
        required: true
        schema:
          type: string
        description: The quality review sub goal uuid.
      - name: qualityReviewMainGoalId
        in: path
        required: true
        schema:
          type: string
        description: The quality review main goal uuid.
      - name: qualityReviewId
        in: path
        required: true
        schema:
          type: string
        description: The quality review uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/qualityReviews/{qualityReviewId}/qualityReviewMainGoals/{qualityReviewMainGoalId}/qualityReviewSubGoals/{qualityReviewSubGoalId}/qualityReviewIndicators/{qualityReviewIndicatorId}':
    get:
      tags:
        - qualityReviews
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityReviewIndicatorViewModel'
      description: >
        Get specified quality review indicator within the specified organization
        and specified quality review


        and specified quality review main goal and specified quality review sub
        goal.
      operationId: >-
        resource_OrganizationQualityReviewIndicatorResource_getQualityReviewViewModel_GET
    put:
      tags:
        - qualityReviews
      responses:
        default:
          description: ''
      description: >-
        Update or create quality review indicator with the specified quality
        review indicator id.
      operationId: resource_OrganizationQualityReviewIndicatorResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualityReviewIndicatorUpdateMessage'
        required: true
    delete:
      tags:
        - qualityReviews
      responses:
        default:
          description: ''
      description: >
        Delete specified quality review indicator within the specified
        organization and specified quality review


        and specified quality review main goal and specified quality review sub
        goal.
      operationId: resource_OrganizationQualityReviewIndicatorResource_delete_DELETE
    parameters:
      - name: qualityReviewIndicatorId
        in: path
        required: true
        schema:
          type: string
        description: The quality review indicator uuid.
      - name: qualityReviewSubGoalId
        in: path
        required: true
        schema:
          type: string
        description: The quality review sub goal uuid.
      - name: qualityReviewMainGoalId
        in: path
        required: true
        schema:
          type: string
        description: The quality review main goal uuid.
      - name: qualityReviewId
        in: path
        required: true
        schema:
          type: string
        description: The quality review uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/references':
    get:
      tags:
        - organizations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceViewModel'
      description: Get reference links.
      operationId: resource_OrganizationReferenceResource_getReferenceLinks_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/reports':
    get:
      tags:
        - reports
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportViewModel'
      description: Get all the reports within the specified organization.
      operationId: resource_OrganizationReportResource_getReportViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/reports/{entityId}/attachments':
    get:
      tags:
        - reports
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationReportResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/reports/{entityId}/attachments/{fileName}':
    put:
      tags:
        - reports
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationReportResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/reports/{entityId}/attachments/{attachmentUuid}':
    get:
      tags:
        - reports
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationReportResource_getAttachment_GET
    delete:
      tags:
        - reports
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationReportResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/reports/{entityId}/attachments/{attachmentUuid}/session':
    get:
      tags:
        - reports
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationReportResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/reports/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      tags:
        - reports
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationReportResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/reports/{reportId}':
    get:
      tags:
        - reports
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportViewModel'
      description: Get the report with the specified report id.
      operationId: resource_OrganizationReportResource_getReportViewModel_GET
    put:
      tags:
        - reports
      responses:
        default:
          description: ''
      description: >-
        Update or create report with the specified report id, and the search
        index for the report will also be updated or created.
      operationId: resource_OrganizationReportResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportUpdateMessage'
        required: true
    delete:
      tags:
        - reports
      responses:
        default:
          description: ''
      description: >-
        Delete report with the specified report id, the search index of the
        report will also be deleted.
      operationId: resource_OrganizationReportResource_delete_DELETE
    parameters:
      - name: reportId
        in: path
        required: true
        schema:
          type: string
        description: The existing report uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/reports/{reportId}/revisions':
    get:
      tags:
        - reports
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RevisionViewModel'
      operationId: resource_OrganizationReportResource_getRevisions_GET
    parameters:
      - name: reportId
        in: path
        required: true
        schema:
          type: string
        description: The existing report uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/archive':
    get:
      tags:
        - organizations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveViewModel'
      description: Return archive entities under organization.
      operationId: resource_OrganizationResource_getArchive_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/fetch':
    get:
      tags:
        - organizations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteOrganizationViewModel'
      operationId: resource_OrganizationResource_getFetch_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/search':
    get:
      tags:
        - organizations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchResultHit'
      description: Search content from cloud search server.
      operationId: resource_OrganizationResource_getSearch_GET
      parameters:
        - name: limit
          in: query
          schema:
            default: 10
            format: int32
            type: integer
        - name: query
          in: query
          description: The query conditions
          schema:
            type: string
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/settings':
    put:
      tags:
        - organizations
      responses:
        default:
          description: ''
      description: update organization setting for specified organization.
      operationId: resource_OrganizationResource_putSettings_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationSettingsUpdateMessage'
        required: true
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/state':
    put:
      tags:
        - organizations
      responses:
        default:
          description: ''
      description: Updates the account state.
      operationId: resource_OrganizationResource_putState_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountStateUpdateMessage'
        required: true
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/messages/{message}':
    delete:
      tags:
        - organizations
      responses:
        default:
          description: ''
      description: Marks the message as deleted so it will not be shown again.
      operationId: resource_OrganizationResource_deleteMessage_DELETE
    parameters:
      - name: message
        in: path
        required: true
        schema:
          type: string
        description: message
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/riskAssessments':
    get:
      tags:
        - riskAssessments
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RiskAssessmentViewModel'
      description: Get all the riskAssessments within the specified organization.
      operationId: >-
        resource_OrganizationRiskAssessmentResource_getRiskAssessmentViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/riskAssessments/{entityId}/attachments':
    get:
      tags:
        - riskAssessments
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationRiskAssessmentResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/riskAssessments/{entityId}/attachments/{fileName}':
    put:
      tags:
        - riskAssessments
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationRiskAssessmentResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/riskAssessments/{entityId}/attachments/{attachmentUuid}':
    get:
      tags:
        - riskAssessments
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationRiskAssessmentResource_getAttachment_GET
    delete:
      tags:
        - riskAssessments
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationRiskAssessmentResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/riskAssessments/{entityId}/attachments/{attachmentUuid}/session':
    get:
      tags:
        - riskAssessments
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationRiskAssessmentResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/riskAssessments/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      tags:
        - riskAssessments
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationRiskAssessmentResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/riskAssessments/{riskAssessmentId}':
    get:
      tags:
        - riskAssessments
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskAssessmentViewModel'
      description: Get the riskAssessment with the specified riskAssessment id.
      operationId: >-
        resource_OrganizationRiskAssessmentResource_getRiskAssessmentViewModel_GET
    put:
      tags:
        - riskAssessments
      responses:
        default:
          description: ''
      description: >-
        Update or create riskAssessment with the specified riskAssessment id,
        and the search index for the riskAssessment will also be updated or
        created.
      operationId: resource_OrganizationRiskAssessmentResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiskAssessmentUpdateMessage'
        required: true
    delete:
      tags:
        - riskAssessments
      responses:
        default:
          description: ''
      description: >-
        Delete riskAssessment with the specified riskAssessment id, the search
        index of the riskAssessment will also be deleted.
      operationId: resource_OrganizationRiskAssessmentResource_delete_DELETE
    parameters:
      - name: riskAssessmentId
        in: path
        required: true
        schema:
          type: string
        description: The existing riskAssessment uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/assets':
    get:
      tags:
        - assets
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetViewModel'
      description: Get all the assets within the specified organization.
      operationId: resource_OrganizationAssetResource_getAssetViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/assets/{entityId}/attachments':
    get:
      tags:
        - assets
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationAssetResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/assets/{entityId}/attachments/{fileName}':
    put:
      tags:
        - assets
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationAssetResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/assets/{entityId}/attachments/{attachmentUuid}':
    get:
      tags:
        - assets
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationAssetResource_getAttachment_GET
    delete:
      tags:
        - assets
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationAssetResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/assets/{entityId}/attachments/{attachmentUuid}/session':
    get:
      tags:
        - assets
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationAssetResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/assets/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      tags:
        - assets
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationAssetResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/assets/{assetId}':
    get:
      tags:
        - assets
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetViewModel'
      description: Get the asset with the specified asset id.
      operationId: resource_OrganizationAssetResource_getAssetViewModel_GET
    put:
      tags:
        - assets
      responses:
        default:
          description: ''
      description: >-
        Update or create asset with the specified asset id, and the search index
        for the asset will also be updated or created.
      operationId: resource_OrganizationAssetResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsUpdateMessage'
        required: true
    delete:
      tags:
        - assets
      responses:
        default:
          description: ''
      description: >-
        Delete asset with the specified asset id, the search index of the asset
        will also be deleted.
      operationId: resource_OrganizationAssetResource_delete_DELETE
    parameters:
      - name: assetId
        in: path
        required: true
        schema:
          type: string
        description: The existing asset uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  /tokens:
    get:
      tags:
        - tokens
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TokenViewModel'
      operationId: resource_TokensResource_get_GET
    post:
      tags:
        - tokens
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageViewModel'
      operationId: resource_TokensResource_post_POST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenViewModel'
        required: true
  '/tokens/{uuid}':
    delete:
      tags:
        - tokens
      responses:
        default:
          description: ''
      operationId: resource_TokensResource_delete_DELETE
    parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
        description: uuid
components:
  schemas:
    AccountCreateMessage:
      description: >
        Extends the organization create message with email and password. Allows
        new users to create user and account. The

        email must not belong to an existing user.
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        invoiceAddress:
          type: string
        invoicePostcode:
          type: string
        invoiceLocality:
          type: string
        organizationName:
          type: string
        employeesCount:
          type: integer
        specialTerms:
          enum:
            - NONE
            - DNLF
            - NFF
          type: string
        businessEntityType:
          type: string
        email:
          description: >-
            The email of the new user. This email is used to create a user and
            as the contact email of the new account.
          type: string
        password:
          description: The password of the new user.
          type: string
    AdminAccountViewModel:
      type: object
      properties:
        id:
          type: integer
        contactEmail:
          type: string
        contactName:
          type: string
        invoiceOrganization:
          type: string
        organizationName:
          type: string
        invitedBy:
          type: string
        invoiceAddress:
          type: string
        closed:
          type: boolean
        pending:
          type: boolean
        upgraded:
          type: boolean
        specialTerms:
          enum:
            - NONE
            - DNLF
            - NFF
          type: string
        createdDate:
          type: string
        expires:
          type: string
          format: date
        amount:
          type: integer
        employees:
          type: array
          items:
            $ref: '#/components/schemas/AccountEmployeeViewModel'
        invoiceLink:
          type: string
    AccountEmployeeViewModel:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        accessLevel:
          enum:
            - NONE
            - READONLY
            - PAGE
            - USER
            - LEADER
          type: string
        associationType:
          type: string
        email:
          type: string
        phone:
          type: string
        profession:
          type: string
        status:
          enum:
            - ACTIVE
            - LEAVE
            - TERMINATED
          type: string
    AccountLoginViewModel:
      type: object
      properties:
        location:
          type: string
    AccountStateEmployeeViewModel:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        associationType:
          type: string
        profession:
          type: string
        email:
          type: string
        accessLevel:
          type: string
        uuid:
          type: string
          format: uuid
      required:
        - uuid
    AccountStateUpdateMessage:
      description: >
        The AccountStateUpdateMessage is exactly the same as the account state
        view model. It is used as a memento


        object so that the on boarding sequence can save / retrieve current
        state.
      type: object
      properties:
        page:
          type: integer
        pending:
          type: boolean
        businessEntityType:
          type: string
        employees:
          type: array
          items:
            $ref: '#/components/schemas/AccountStateEmployeeViewModel'
        activityCodes:
          type: array
          items:
            type: string
        leaderFunction:
          type: string
          format: uuid
        healthSafetyAndEnvironmentalFunction:
          type: string
          format: uuid
        assetFunction:
          type: string
          format: uuid
        computerFunction:
          type: string
          format: uuid
        economicsFunction:
          type: string
          format: uuid
        qualityManagerFunction:
          type: string
          format: uuid
        professionalDevelopmentFunction:
          type: string
          format: uuid
        humanResourcesFunction:
          type: string
          format: uuid
      required:
        - employees
        - leaderFunction
        - healthSafetyAndEnvironmentalFunction
        - assetFunction
        - computerFunction
        - economicsFunction
        - qualityManagerFunction
        - professionalDevelopmentFunction
        - humanResourcesFunction
    AccountStateViewModel:
      type: object
      properties:
        page:
          type: integer
        pending:
          type: boolean
        businessEntityType:
          type: string
        employees:
          type: array
          items:
            $ref: '#/components/schemas/AccountStateEmployeeViewModel'
        activityCodes:
          type: array
          items:
            type: string
        leaderFunction:
          type: string
          format: uuid
        healthSafetyAndEnvironmentalFunction:
          type: string
          format: uuid
        assetFunction:
          type: string
          format: uuid
        computerFunction:
          type: string
          format: uuid
        economicsFunction:
          type: string
          format: uuid
        qualityManagerFunction:
          type: string
          format: uuid
        professionalDevelopmentFunction:
          type: string
          format: uuid
        humanResourcesFunction:
          type: string
          format: uuid
      required:
        - employees
        - leaderFunction
        - healthSafetyAndEnvironmentalFunction
        - assetFunction
        - computerFunction
        - economicsFunction
        - qualityManagerFunction
        - professionalDevelopmentFunction
        - humanResourcesFunction
    AccountStatusUpdateMessage:
      type: object
      properties:
        closed:
          type: boolean
        expires:
          type: string
          format: date
    AccountStatusViewModel:
      type: object
      properties:
        openAccountsCount:
          type: integer
        closedAccountsCount:
          type: integer
        amount:
          type: integer
        monthlyInvoicingOverview:
          type: array
          items:
            $ref: '#/components/schemas/MonthlyInvoicingOverview'
    MonthlyInvoicingOverview:
      type: object
      properties:
        year:
          type: integer
        month:
          type: integer
        description:
          type: string
        count:
          type: integer
        amount:
          type: integer
    AccountUpdateMessage:
      type: object
      properties:
        password:
          type: string
        organizationIdForSummaries:
          type: integer
        summaries:
          enum:
            - NONE
            - ALL
            - SCHEDULED
          type: string
        receiveReminders:
          enum:
            - NONE
            - SMS
          type: string
          description: Set to NONE to turn off all notifications using SMS.
        email:
          type: string
    AccountViewModel:
      type: object
      properties:
        href:
          type: string
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationReference'
    OrganizationReference:
      type: object
      properties:
        name:
          type: string
        ownerEmail:
          type: string
        expires:
          type: string
          format: date
        pending:
          type: boolean
        closed:
          type: boolean
        readonly:
          type: boolean
        href:
          type: string
        message:
          type: string
        id:
          type: integer
        state:
          $ref: '#/components/schemas/AccountStateViewModel'
    UpgradableOrganizationViewModel:
      type: object
      properties:
        canUpgrade:
          type: boolean
        href:
          type: string
        expires:
          type: string
          format: date
        ownerEmail:
          type: string
        readonly:
          type: boolean
        name:
          type: string
        id:
          type: integer
    ArchiveViewModel:
      type: object
      properties:
        assets:
          type: array
          items:
            $ref: '#/components/schemas/AssetViewModel'
        computers:
          type: array
          items:
            $ref: '#/components/schemas/ComputerViewModel'
        constitutionalDocuments:
          type: array
          items:
            $ref: '#/components/schemas/ConstitutionalDocumentViewModel'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactPersonViewModel'
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/ContractViewModel'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentViewModel'
        employees:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeViewModel'
        externalConnections:
          type: array
          items:
            $ref: '#/components/schemas/ExternalConnectionViewModel'
        functions:
          type: array
          items:
            $ref: '#/components/schemas/FunctionViewModel'
        guidelines:
          type: array
          items:
            $ref: '#/components/schemas/GuidelineViewModel'
        issues:
          type: array
          items:
            $ref: '#/components/schemas/IssueViewModel'
        networks:
          type: array
          items:
            $ref: '#/components/schemas/NetworkViewModel'
        partners:
          type: array
          items:
            $ref: '#/components/schemas/PartnerViewModel'
        qualityReviews:
          type: array
          items:
            $ref: '#/components/schemas/QualityReviewViewModel'
        qualityReviewIndicators:
          type: array
          items:
            $ref: '#/components/schemas/QualityReviewIndicatorViewModel'
        qualityReviewMainGoals:
          type: array
          items:
            $ref: '#/components/schemas/QualityReviewMainGoalViewModel'
        qualityReviewSubGoals:
          type: array
          items:
            $ref: '#/components/schemas/QualityReviewSubGoalViewModel'
        reports:
          type: array
          items:
            $ref: '#/components/schemas/ReportViewModel'
        riskAssessments:
          type: array
          items:
            $ref: '#/components/schemas/RiskAssessmentViewModel'
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskViewModel'
    AssetViewModel:
      type: object
      properties:
        name:
          type: string
        number:
          type: string
        category:
          type: string
        owner:
          type: string
        manufacturer:
          type: string
        model:
          type: string
        location:
          type: string
        userManual:
          type: string
        supplier:
          type: string
        acquiredYear:
          type: string
        discardedYear:
          type: string
        accessory:
          type: string
        competency:
          type: string
        maintenance:
          type: string
        maintenanceInterval:
          type: string
        lastMaintenanceResultOk:
          type: string
        complianceDeclaration:
          type: string
        uuid:
          type: string
          format: uuid
        requiresElectricity:
          type: boolean
        storesSensitiveInformation:
          type: boolean
        maintenanceRequired:
          type: boolean
        assetVerified:
          type: boolean
        documentationVerified:
          type: boolean
        documented:
          type: boolean
        lastMaintenanceComment:
          type: boolean
        lastMaintenanceDate:
          type: string
          format: date
        deleted:
          type: boolean
        tasks:
          type: array
          items:
            type: string
            format: uuid
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentViewModel'
    AttachmentViewModel:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        fullPath:
          type: string
        name:
          type: string
        viewingSessionId:
          type: string
        url:
          type: string
    ComputerViewModel:
      type: object
      properties:
        notes:
          type: string
        name:
          type: string
        location:
          type: string
        type:
          type: string
        journalType:
          type: string
        journalSupplier:
          type: string
        journalSize:
          type: string
        messagingType:
          type: string
        messagingSupplier:
          type: string
        localPrinter:
          type: string
        antivirus:
          type: boolean
        laptop:
          type: boolean
        storesPersonalInformation:
          type: boolean
        storesJournal:
          type: boolean
        journalRegistered:
          type: boolean
        journalHasElectronicMessaging:
          type: boolean
        messageMonitoring:
          type: boolean
        autoLookupPatients:
          type: boolean
        autoLookupAddress:
          type: boolean
        autoLookupAddressNhn:
          type: boolean
        autoUpdateAddressNhn:
          type: boolean
        deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
        networkUuid:
          type: string
          format: uuid
        unitType:
          type: string
        serviceProvider:
          type: string
          format: uuid
        connectionType:
          type: string
        contracts:
          type: array
            items:
              type: string
              format: uuid
        systemUpdateOperatorType:
          type: string
        systemUpdateOperator:
          type: string
          format: uuid
        antiVirusOperatorType:
          type: string
        antiVirusOperator:
          type: string
          format: uuid
        elevated:
          type: boolean
        locked:
          type: boolean
        restrictedPhysicalAccess:
          type: boolean
        displayPositionSecure:
          type: boolean
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentViewModel'
    ConstitutionalDocumentViewModel:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        templateId:
          type: string
        template:
          type: string
        name:
          type: string
        content:
          type: string
        helpContent:
          type: string
        classification:
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        validFromDate:
          type: string
          format: date
        validToDate:
          type: string
          format: date
        deleted:
          type: boolean
        employees:
          type: array
          items:
            type: string
            format: uuid
        partners:
          type: array
          items:
            type: string
            format: uuid
        accessControl:
          type: array
          items:
            type: string
            format: uuid
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentViewModel'
    PersonalDataItemViewModel:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        establishedDate:
          type: string
          format: date
        type:
          type: string
        storageMedium:
          type: string
        storageUnit:
          type: string
          format: uuid
        storageLocation:
          type: string
        backupOperatorType:
          type: string
        backupOperator:
          type: string
          format: uuid
        journalType:
          type: string
        journalSupplier:
          type: string
          format: uuid
        journalSize:
          type: string
        sharedMedicalRecords:
          type: boolean
        sharedMedicalRecordsPartners:
          type: array
          items:
            type: string
            formt: uuid
        sharedMedicalRecordsContracts:
          type: array
          items:
            type: string
            formt: uuid
        treatments:
          type: array
          items:
            type: string
        purpose:
          type: string
        legalBasis:
          type: string
        consentContracts:
          type: array
          items:
            type: string
            formt: uuid
        journalHasElectronicMessaging:
          type: boolean
        messagingType:
          type: string
        messagingSupplier:
          type: string
          format: uuid
        riskAssessments:
          type: array
          items:
            type: string
            formt: uuid
        otherRiskAssessments:
          type: string
        riskAssessmentConcludesOk:
          type: boolean
        deleted:
          type: boolean
        notes:
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentViewModel'
    ContactPersonViewModel:
      type: object
      properties:
        notes:
          type: string
        email:
          type: string
        lastName:
          type: string
        firstName:
          type: string
        telephone:
          type: string
        mobilePhone:
          type: string
        uuid:
          type: string
          format: uuid
        partner:
          type: string
          format: uuid
        accessLevel:
          enum:
            - NONE
            - READONLY
            - PAGE
            - USER
            - LEADER
          type: string
        deleted:
          type: boolean
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentViewModel'
    ContractViewModel:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        templateId:
          type: string
        templateEmployeeId:
          type: string
        documentLocation:
          type: string
        category:
          type: string
        name:
          type: string
        sideCode:
          type: string
        status:
          type: string
        content:
          type: string
        affiliation:
          type: string
        profession:
          type: string
        helpContent:
          type: string
        classification:
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        validFromDate:
          type: string
          format: date
        validToDate:
          type: string
          format: date
        required:
          type: boolean
        relationsLocked:
          type: boolean
        deleted:
          type: boolean
        employees:
          type: array
          items:
            type: string
            format: uuid
        partners:
          type: array
          items:
            type: string
            format: uuid
        accessControl:
          type: array
          items:
            type: string
            format: uuid
        pages:
          type: array
          items:
            type: integer
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentViewModel'
    DocumentViewModel:
      type: object
      properties:
        validFromDate:
          type: string
          format: date
        validToDate:
          type: string
          format: date
        category:
          type: string
        template:
          type: string
        name:
          type: string
        status:
          type: string
        content:
          type: string
        type:
          type: string
        classification:
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        uuid:
          type: string
          format: uuid
        helpContent:
          type: string
        deleted:
          type: boolean
        pages:
          type: array
          items:
            type: integer
        accessControl:
          type: array
          items:
            type: string
            format: uuid
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentViewModel'
    EmployeeViewModel:
      type: object
      properties:
        postcode1:
          type: string
        postcode2:
          type: string
        email:
          type: string
        phone:
          type: string
        secondaryPhone:
          type: string
        associationType:
          type: string
        profession:
          type: string
        uuid:
          type: string
          format: uuid
        address:
          type: string
        address2:
          type: string
        notes:
          type: string
        lastName:
          type: string
        firstName:
          type: string
        group:
          type: boolean
        herNumber:
          type: string
        hprNumber:
          type: string
        expertise:
          type: string
        deletable:
          type: boolean
        deleted:
          type: boolean
        issues:
          type: array
          items:
            type: string
            format: uuid
        riskAssessment:
          type: array
          items:
            type: string
            format: uuid
        externalConnections:
          type: array
          items:
            type: string
            format: uuid
        qualitySubGoalsResponsible:
          type: array
          items:
            type: string
            format: uuid
        accessLevel:
          enum:
            - NONE
            - READONLY
            - PAGE
            - USER
            - LEADER
          type: string
        speciality:
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentViewModel'
        status:
          enum:
            - ACTIVE
            - LEAVE
            - TERMINATED
          type: string
        summaries:
          enum:
            - NONE
            - ALL
            - SCHEDULED
          type: string
        receiveReminders:
          enum:
            - NONE
            - SMS
          type: string
          description: Set to NONE to turn off all notifications using SMS.
    ExternalConnectionViewModel:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        connectionType:
          enum:
            - NONE
            - NHN
            - OTHER
          type: string
        description:
          type: string
        deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
        employeeUuid:
          type: string
          format: uuid
        partnerUuid:
          type: string
          format: uuid
        networkUuid:
          type: string
          format: uuid
        supplierUuid:
          type: string
          format: uuid
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentViewModel'
    FunctionViewModel:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        responsibility:
          type: string
        type:
          enum:
            - SINGLE
            - ROTATED
            - SIMULTANEOUS
            - COMMON
          type: string
        description:
          type: string
        rotation:
          type: string
        name:
          type: string
        status:
          type: string
        category:
          type: string
        template:
          type: string
        helpContent:
          type: string
        responsibilityLocked:
          type: boolean
        deleted:
          type: boolean
        employees:
          type: array
          items:
            type: string
            format: uuid
        rotations:
          type: array
          items:
            $ref: '#/components/schemas/FunctionRotationViewModel'
        pages:
          type: array
          items:
            type: integer
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskViewModel'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentViewModel'
    FunctionRotationViewModel:
      type: object
      properties:
        employee:
          type: string
          format: uuid
        day1:
          type: integer
        day2:
          type: integer
        day3:
          type: integer
        day4:
          type: integer
        day5:
          type: integer
        day6:
          type: integer
        day7:
          type: integer
        startDate:
          type: string
          format: date
    TaskViewModel:
      type: object
      properties:
        reminder:
          enum:
            - NONE
            - AT_START
            - ONE_HOUR_BEFORE
            - TWO_HOURS_BEFORE
            - THREE_HOURS_BEFORE
            - FIVE_HOURS_BEFORE
          type: string
        type:
          type: string
        situation:
          type: string
        procedures:
          type: string
        name:
          type: string
        uuid:
          type: string
          format: uuid
        function:
          type: string
          format: uuid
        asset:
          type: string
          format: uuid
        employee:
          type: string
          format: uuid
        rrule:
          type: string
        helpContent:
          type: string
        deleted:
          type: boolean
        locked:
          type: boolean
        lastExecuted:
          type: string
          format: date
        pages:
          type: array
          items:
            type: integer
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentViewModel'
    GuidelineViewModel:
      type: object
      properties:
        category:
          type: string
        template:
          type: string
        name:
          type: string
        status:
          type: string
        content:
          type: string
        uuid:
          type: string
          format: uuid
        helpContent:
          type: string
        deleted:
          type: boolean
        pages:
          type: array
          items:
            type: integer
        classification:
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        accessControl:
          type: array
          items:
            type: string
            format: uuid
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentViewModel'
    IssueViewModel:
      type: object
      properties:
        notes:
          type: string
        description:
          type: string
        identifiedMeasures:
          type: string
        shallEvaluated:
          type: boolean
        immediateMeasures:
          type: string
        uuid:
          type: string
          format: uuid
        furtherMeasures:
          type: string
        name:
          type: string
        correction:
          type: string
        registeredBy:
          type: string
          format: uuid
        reportedTo:
          type: string
          format: uuid
        reportedBy:
          type: string
          format: uuid
        responsibleBy:
          type: string
          format: uuid
        processedBy:
          type: string
          format: uuid
        evaluatedBy:
          type: string
          format: uuid
        processedDate:
          type: string
          format: date
        reportedDate:
          type: string
          format: date
        evaluatedDate:
          type: string
          format: date
        eventDate:
          type: string
          format: date
        registeredDate:
          type: string
          format: date
        evaluated:
          type: boolean
        implementedMeasure:
          type: boolean
        reportedLabourInspection:
          type: boolean
        reportedInspectorate:
          type: boolean
        reportedSafetyManager:
          type: boolean
        reportedCountyMedical:
          type: boolean
        deleted:
          type: boolean
        informationLeakagePossibility:
          type: boolean
        personDamagePossibility:
          type: boolean
        relateToEmployees:
          type: boolean
        relateToEquipment:
          type: boolean
        relateToPatient:
          type: boolean
        relateToPatientInstitution:
          type: boolean
        relateToRadiation:
          type: boolean
        requiresMeasures:
          type: boolean
        requireEvaluation:
          type: boolean
        measuresSatisfactorily:
          type: boolean
        evaluatedOk:
          type: boolean
        pages:
          type: array
          items:
            type: integer
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentViewModel'
    NetworkViewModel:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        nhnDescription:
          type: string
        otherDescription:
          type: string
        connectionType:
          type: string
        supplierUuid:
          type: string
          format: uuid
        type:
          enum:
            - cable
            - wifi
            - both
        firewall:
            - NONE
            - NHN
            - OTHER
        firewallName:
          type: string
        systemUpdateOperatorType:
          enum:
            - internal
            - external
            - internalAndExternal
        systemUpdateOperator:
          type: string
          format: uuid
        antiVirusOperatorType:
          enum:
            - internal
            - external
            - internalAndExternal
        antiVirusOperator:
          type: string
          format: uuid
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentViewModel'
        deleted:
          type: boolean
    PartnerViewModel:
      type: object
      properties:
        email:
          type: string
        url:
          type: string
        notes:
          type: string
        industry:
          type: string
        name:
          type: string
        address:
          type: string
        phone:
          type: string
        uuid:
          type: string
          format: uuid
        deleted:
          type: boolean
        remoteAccess:
          type: boolean
        physicalAccess:
          type: boolean
        pageAccess:
          type: boolean
        deletable:
          type: boolean
        helpContent:
          type: string
        externalConnections:
          type: array
          items:
            type: string
            format: uuid
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactPersonViewModel'
        pages:
          type: array
          items:
            type: integer
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentViewModel'
    QualityReviewViewModel:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        mainGoals:
          type: array
          items:
            $ref: '#/components/schemas/QualityReviewMainGoalViewModel'
        deleted:
          type: boolean
    QualityReviewMainGoalViewModel:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        uuid:
          type: string
          format: uuid
        subGoals:
          type: array
          items:
            $ref: '#/components/schemas/QualityReviewSubGoalViewModel'
        deleted:
          type: boolean
    QualityReviewSubGoalViewModel:
      type: object
      properties:
        name:
          type: string
        uuid:
          type: string
          format: uuid
        responsibleBy:
          type: string
          format: uuid
        indicators:
          type: array
          items:
            $ref: '#/components/schemas/QualityReviewIndicatorViewModel'
        deleted:
          type: boolean
    QualityReviewIndicatorViewModel:
      type: object
      properties:
        name:
          type: string
        assessment:
          type: string
        assessmentDate:
          type: string
          format: local-date-time
        approved:
          type: boolean
        uuid:
          type: string
          format: uuid
    ReportViewModel:
      type: object
      properties:
        name:
          type: string
        content:
          type: string
        reportDate:
          type: string
          format: date
        uuid:
          type: string
          format: uuid
        employeeUuid:
          type: string
          format: uuid
        helpContent:
          type: string
        classification:
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        deleted:
          type: boolean
        pages:
          type: array
          items:
            type: integer
        accessControl:
          type: array
          items:
            type: string
            format: uuid
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentViewModel'
    RiskAssessmentViewModel:
      type: object
      properties:
        probability:
          type: integer
        consequence:
          type: integer
        description:
          type: string
        riskDescription:
          type: string
        name:
          type: string
        measures:
          type: string
        uuid:
          type: string
          format: uuid
        helpContent:
          type: string
        assessmentDate:
          type: string
          format: date
        violatesInformationSecurityRequirements:
          type: boolean
        violatesIntegrityRequirement:
          type: boolean
        violatesConfidentialityRequirement:
          type: boolean
        violatesNonRepudiationRequirement:
          type: boolean
        violatesAvailabilityRequirement:
          type: boolean
        deleted:
          type: boolean
        responsibleBy:
          type: string
          format: uuid
        determinedBy:
          type: string
          format: uuid
        pages:
          type: array
          items:
            type: integer
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentViewModel'
    AssetsUpdateMessage:
      type: object
      properties:
        name:
          type: string
        number:
          type: string
        category:
          type: string
        owner:
          type: string
        manufacturer:
          type: string
        model:
          type: string
        location:
          type: string
        userManual:
          type: string
        supplier:
          type: string
        acquiredYear:
          type: string
        discardedYear:
          type: string
        accessory:
          type: string
        competency:
          type: string
        maintenance:
          type: string
        maintenanceInterval:
          type: string
        complianceDeclaration:
          type: string
        requiresElectricity:
          type: boolean
        storesSensitiveInformation:
          type: boolean
        maintenanceRequired:
          type: boolean
        assetVerified:
          type: boolean
        documentationVerified:
          type: boolean
        documented:
          type: boolean
    AttachmentPropertiesUpdateMessage:
      description: Update the name of the attachment.
      type: object
      properties:
        name:
          type: string
      required:
        - name
    CompleteOrganizationViewModel:
      type: object
      properties:
        organizationId:
          type: integer
        href:
          type: string
        address:
          type: string
        notes:
          type: string
        officeAddress:
          type: string
        officePostcode:
          type: string
        email:
          type: string
        herNumber:
          type: string
        name:
          type: string
        businessEntityType:
          type: string
        organizationNumber:
          type: string
        mailAddress:
          type: string
        mailPostcode:
          type: string
        fax:
          type: string
        phone:
          type: string
        type:
          type: string
        url:
          type: string
        invoiceReceiver:
          type: string
        invoicePostcode:
          type: string
        invoiceLocality:
          type: string
        reference:
          type: string
        invoiceAddress:
          type: string
        ownerEmail:
          type: string
        settingsHref:
          type: string
        activityCodes:
          type: array
          items:
            type: string
        specialTerms:
          enum:
            - NONE
            - DNLF
            - NFF
          type: string
        functions:
          type: array
          items:
            $ref: '#/components/schemas/FunctionViewModel'
        issues:
          type: array
          items:
            $ref: '#/components/schemas/IssueViewModel'
        partners:
          type: array
          items:
            $ref: '#/components/schemas/PartnerViewModel'
        constitutionalDocuments:
          type: array
          items:
            $ref: '#/components/schemas/ConstitutionalDocumentViewModel'
        computers:
          type: array
          items:
            $ref: '#/components/schemas/ComputerViewModel'
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/ContractViewModel'
        guidelines:
          type: array
          items:
            $ref: '#/components/schemas/GuidelineViewModel'
        networks:
          type: array
          items:
            $ref: '#/components/schemas/NetworkViewModel'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentViewModel'
        employees:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeViewModel'
        externalConnections:
          type: array
          items:
            $ref: '#/components/schemas/ExternalConnectionViewModel'
        qualityReviews:
          type: array
          items:
            $ref: '#/components/schemas/QualityReviewViewModel'
        riskAssessments:
          type: array
          items:
            $ref: '#/components/schemas/RiskAssessmentViewModel'
        reports:
          type: array
          items:
            $ref: '#/components/schemas/ReportViewModel'
        assets:
          type: array
          items:
            $ref: '#/components/schemas/AssetViewModel'
    ComputerUpdateMessage:
      type: object
      properties:
        name:
          type: string
        notes:
          type: string
        location:
          type: string
        type:
          type: string
        journalType:
          type: string
        journalSupplier:
          type: string
        journalSize:
          type: string
        messagingType:
          type: string
        messagingSupplier:
          type: string
        localPrinter:
          type: string
        antivirus:
          type: boolean
        laptop:
          type: boolean
        storesPersonalInformation:
          type: boolean
        storesJournal:
          type: boolean
        journalRegistered:
          type: boolean
        journalHasElectronicMessaging:
          type: boolean
        messageMonitoring:
          type: boolean
        autoLookupPatients:
          type: boolean
        autoLookupAddress:
          type: boolean
        autoLookupAddressNhn:
          type: boolean
        autoUpdateAddressNhn:
          type: boolean
        networkUuid:
          type: string
          format: uuid
        unitType:
          type: string
        serviceProvider:
          type: string
          format: uuid
        connectionType:
          type: string
        contracts:
          type: array
            items:
              type: string
              format: uuid
        systemUpdateOperatorType:
          type: string
        systemUpdateOperator:
          type: string
          format: uuid
        antiVirusOperatorType:
          type: string
        antiVirusOperator:
          type: string
          format: uuid
        elevated:
          type: boolean
        locked:
          type: boolean
        restrictedPhysicalAccess:
          type: boolean
        displayPositionSecure:
          type: boolean
    PersonalDataItemUpdateMessage:
      type: object
      properties:
        name:
          type: string
        establishedDate:
          type: string
          format: date
        type:
          type: string
        storageMedium:
          type: string
        storageUnit:
          type: string
          format: uuid
        storageLocation:
          type: string
        backupOperatorType:
          type: string
        backupOperator:
          type: string
          format: uuid
        journalType:
          type: string
        journalSupplier:
          type: string
          format: uuid
        journalSize:
          type: string
        notes:
          type: string
        sharedMedicalRecords:
          type: boolean
        sharedMedicalRecordsPartners:
          type: array
          items:
            type: string
            formt: uuid
        sharedMedicalRecordsContracts:
          type: array
          items:
            type: string
            formt: uuid
        treatments:
          type: array
          items:
            type: string
        purpose:
          type: string
        legalBasis:
          type: string
        consentContracts:
          type: array
          items:
            type: string
            formt: uuid
        journalHasElectronicMessaging:
          type: boolean
        messagingType:
          type: string
        messagingSupplier:
          type: string
          format: uuid
        riskAssessments:
          type: array
          items:
            type: string
            formt: uuid
        otherRiskAssessments:
          type: string
        riskAssessmentConcludesOk:
          type: boolean
    ConstitutionalDocumentUpdateMessage:
      type: object
      properties:
        templateId:
          type: string
        template:
          type: string
        name:
          type: string
        content:
          type: string
        validFromDate:
          type: string
          format: date
        validToDate:
          type: string
          format: date
        employees:
          type: array
          items:
            type: string
            format: uuid
        partners:
          type: array
          items:
            type: string
            format: uuid
        classification:
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        accessControl:
          type: array
          items:
            type: string
            format: uuid
    ContactPersonUpdateMessage:
      type: object
      properties:
        notes:
          type: string
        email:
          type: string
        lastName:
          type: string
        firstName:
          type: string
        telephone:
          type: string
        mobilePhone:
          type: string
        accessLevel:
          enum:
            - NONE
            - READONLY
            - PAGE
            - USER
            - LEADER
          type: string
      required:
        - accessLevel
    ContractUpdateMessage:
      type: object
      properties:
        employees:
          type: array
          items:
            type: string
            format: uuid
        partners:
          type: array
          items:
            type: string
            format: uuid
        pages:
          type: array
          items:
            type: integer
        templateId:
          type: string
        templateEmployeeId:
          type: string
        documentLocation:
          type: string
        category:
          type: string
        name:
          type: string
        sideCode:
          type: string
        status:
          type: string
        content:
          type: string
        affiliation:
          type: string
        profession:
          type: string
        classification:
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        accessControl:
          type: array
          items:
            type: string
            format: uuid
        validFromDate:
          type: string
          format: date
        validToDate:
          type: string
          format: date
        required:
          type: boolean
    DocumentUpdateMessage:
      type: object
      properties:
        classification:
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        pages:
          type: array
          items:
            type: integer
        validFromDate:
          type: string
          format: date
        validToDate:
          type: string
          format: date
        category:
          type: string
        template:
          type: string
        name:
          type: string
        status:
          type: string
        content:
          type: string
        type:
          type: string
        accessControl:
          type: array
          items:
            type: string
            format: uuid
      required:
        - classification
    EmployeeUpdateMessage:
      type: object
      properties:
        address:
          type: string
        profession:
          type: string
        notes:
          type: string
        email:
          type: string
        lastName:
          type: string
        firstName:
          type: string
        group:
          type: boolean
        herNumber:
          type: string
        hprNumber:
          type: string
        expertise:
          type: string
        associationType:
          type: string
        accessLevel:
          enum:
            - NONE
            - READONLY
            - PAGE
            - USER
            - LEADER
          type: string
        phone:
          type: string
        secondaryPhone:
          type: string
        speciality:
          type: string
        status:
          enum:
            - ACTIVE
            - LEAVE
            - TERMINATED
          type: string
        functionAssignments:
          type: array
          items:
            $ref: '#/components/schemas/FunctionAssignment'
      required:
        - accessLevel
    FunctionAssignment:
      type: object
      properties:
        functionUuid:
          type: string
          format: uuid
        employeeUuid:
          type: string
          format: uuid
    ExternalConnectionUpdateMessage:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        connectionType:
          enum:
            - NONE
            - NHN
            - OTHER
          type: string
        description:
          type: string
        employeeUuid:
          type: string
          format: uuid
        partnerUuid:
          type: string
          format: uuid
        networkUuid:
          type: string
          format: uuid
        supplierUuid:
          type: string
          format: uuid
    FeedbackMessage:
      type: object
      properties:
        email:
          type: string
        url:
          type: string
        message:
          type: string
    FunctionRotationUpdateMessage:
      type: object
      properties:
        employee:
          type: string
          format: uuid
        day1:
          type: string
        day2:
          type: string
        day3:
          type: string
        day4:
          type: string
        day5:
          type: string
        day6:
          type: string
        day7:
          type: string
        startDate:
          type: string
          format: date
    FunctionTaskUpdateMessage:
      type: object
      properties:
        name:
          type: string
        rrule:
          type: string
        reminder:
          enum:
            - NONE
            - AT_START
            - ONE_HOUR_BEFORE
            - TWO_HOURS_BEFORE
            - THREE_HOURS_BEFORE
            - FIVE_HOURS_BEFORE
          type: string
        procedures:
          type: string
        situation:
          type: string
        functionUuid:
          type: string
        pages:
          type: array
          items:
            type: integer
      required:
        - reminder
    FunctionUpdateMessage:
      type: object
      properties:
        responsibility:
          type: string
        type:
          enum:
            - SINGLE
            - ROTATED
            - SIMULTANEOUS
            - COMMON
          type: string
        description:
          type: string
        rotation:
          type: string
        name:
          type: string
        status:
          type: string
        category:
          type: string
        template:
          type: string
        employees:
          type: array
          items:
            type: string
            format: uuid
        pages:
          type: array
          items:
            type: integer
        rotations:
          type: array
          items:
            $ref: '#/components/schemas/FunctionRotationUpdateMessage'
      required:
        - type
        - rotation
    GuidelineUpdateMessage:
      type: object
      properties:
        category:
          type: string
        template:
          type: string
        name:
          type: string
        status:
          type: string
        content:
          type: string
        pages:
          type: array
          items:
            type: integer
        classification:
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        accessControl:
          type: array
          items:
            type: string
            format: uuid
    InvoiceMessage:
      type: object
      properties:
        expires:
          type: string
          format: date
        products:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceProduct'
        comment:
          type: string
    InvoiceProduct:
      type: object
      properties:
        description:
          type: string
        amount:
          type: integer
    IssueSimpleUpdateMessage:
      type: object
      properties:
        description:
          type: string
    IssueUpdateMessage:
      type: object
      properties:
        notes:
          type: string
        description:
          type: string
        identifiedMeasures:
          type: string
        shallEvaluated:
          type: boolean
        immediateMeasures:
          type: string
        furtherMeasures:
          type: string
        name:
          type: string
        correction:
          type: string
        registeredBy:
          type: string
          format: uuid
        reportedTo:
          type: string
          format: uuid
        reportedBy:
          type: string
          format: uuid
        responsibleBy:
          type: string
          format: uuid
        processedBy:
          type: string
          format: uuid
        evaluatedBy:
          type: string
          format: uuid
        processedDate:
          type: string
          format: date
        reportedDate:
          type: string
          format: date
        evaluatedDate:
          type: string
          format: date
        eventDate:
          type: string
          format: date
        registeredDate:
          type: string
          format: date
        evaluated:
          type: boolean
        implementedMeasure:
          type: boolean
        reportedLabourInspection:
          type: boolean
        reportedInspectorate:
          type: boolean
        reportedSafetyManager:
          type: boolean
        reportedCountyMedical:
          type: boolean
        informationLeakagePossibility:
          type: boolean
        personDamagePossibility:
          type: boolean
        relateToEmployees:
          type: boolean
        relateToEquipment:
          type: boolean
        relateToPatient:
          type: boolean
        relateToPatientInstitution:
          type: boolean
        relateToRadiation:
          type: boolean
        requiresMeasures:
          type: boolean
        requireEvaluation:
          type: boolean
        measuresSatisfactorily:
          type: boolean
        evaluatedOk:
          type: boolean
        pages:
          type: array
          items:
            type: integer
    IssuesRequest:
      description: |
        A request message bean for issue requests IssuesRequest,

        it's used for passing request parameters for several methods
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        organizationId:
          type: integer
        description:
          type: string
    LinkViewModel:
      type: object
      properties:
        linkName:
          type: string
        linkHref:
          type: string
        pageId:
          type: integer
    MessageViewModel:
      type: object
      properties:
        message:
          type: string
    NetworkUpdateMessage:
      type: object
      properties:
        name:
          type: string
        nhnDescription:
          type: string
        otherDescription:
          type: string
        connectionType:
          type: string
        supplierUuid:
          type: string
          format: uuid
        type:
          enum:
            - cable
            - wifi
            - both
        firewall:
            - NONE
            - NHN
            - OTHER
        firewallName:
          type: string
        systemUpdateOperatorType:
          enum:
            - internal
            - external
            - internalAndExternal
        systemUpdateOperator:
          type: string
          format: uuid
        antiVirusOperatorType:
          enum:
            - internal
            - external
            - internalAndExternal
        antiVirusOperator:
          type: string
          format: uuid
    OrganizationCreateMessage:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        invoiceAddress:
          type: string
        invoicePostcode:
          type: string
        invoiceLocality:
          type: string
        organizationName:
          type: string
        employeesCount:
          type: integer
        specialTerms:
          enum:
            - NONE
            - DNLF
            - NFF
          type: string
        businessEntityType:
          type: string
        referralCode:
          type: string
    OrganizationSettingsUpdateMessage:
      type: object
      properties:
        invoiceAddress:
          type: string
        reference:
          type: string
        invoiceReceiver:
          type: string
        ownerEmail:
          type: string
        invoicePostcode:
          type: string
        invoiceLocality:
          type: string
        specialTerms:
          enum:
            - NONE
            - DNLF
            - NFF
          type: string
    OrganizationUpdateMessage:
      type: object
      properties:
        address:
          type: string
        notes:
          type: string
        officeAddress:
          type: string
        officePostcode:
          type: string
        email:
          type: string
        herNumber:
          type: string
        name:
          type: string
        businessEntityType:
          type: string
        organizationNumber:
          type: string
        mailAddress:
          type: string
        mailPostcode:
          type: string
        fax:
          type: string
        phone:
          type: string
        type:
          type: string
        url:
          type: string
        activityCodes:
          type: array
          items:
            type: string
    OrganizationViewModel:
      type: object
      properties:
        organizationId:
          type: integer
        href:
          type: string
        address:
          type: string
        notes:
          type: string
        officeAddress:
          type: string
        officePostcode:
          type: string
        email:
          type: string
        herNumber:
          type: string
        name:
          type: string
        businessEntityType:
          type: string
        organizationNumber:
          type: string
        mailAddress:
          type: string
        mailPostcode:
          type: string
        fax:
          type: string
        phone:
          type: string
        type:
          type: string
        url:
          type: string
        invoiceReceiver:
          type: string
        invoicePostcode:
          type: string
        invoiceLocality:
          type: string
        reference:
          type: string
        invoiceAddress:
          type: string
        ownerEmail:
          type: string
        settingsHref:
          type: string
        activityCodes:
          type: array
          items:
            type: string
        specialTerms:
          enum:
            - NONE
            - DNLF
            - NFF
          type: string
    PageViewModel:
      type: object
      properties:
        pageId:
          type: integer
        name:
          type: string
        subPages:
          type: array
          items:
            $ref: '#/components/schemas/PageViewModel'
        helpContent:
          type: string
        order:
          type: integer
    PartnerUpdateMessage:
      type: object
      properties:
        email:
          type: string
        url:
          type: string
        notes:
          type: string
        industry:
          type: string
        name:
          type: string
        address:
          type: string
        phone:
          type: string
        remoteAccess:
          type: boolean
        physicalAccess:
          type: boolean
        pageAccess:
          type: boolean
        pages:
          type: array
          items:
            type: integer
    PasswordRequest:
      type: object
      properties:
        user:
          type: string
    QualityReviewIndicatorUpdateMessage:
      type: object
      properties:
        assessment:
          type: string
        approved:
          type: boolean
        name:
          type: string
    QualityReviewMainGoalUpdateMessage:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    QualityReviewSubGoalUpdateMessage:
      type: object
      properties:
        name:
          type: string
        person:
          type: string
          format: uuid
    QualityUpdateMessage:
      type: object
      properties:
        name:
          type: string
    ReferenceViewModel:
      type: object
      properties:
        groupName:
          type: string
        pages:
          type: array
          items:
            $ref: '#/components/schemas/LinkViewModel'
    ReportUpdateMessage:
      type: object
      properties:
        name:
          type: string
        content:
          type: string
        reportDate:
          type: string
          format: date
        employee:
          type: string
          format: uuid
        pages:
          type: array
          items:
            type: integer
        classification:
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        accessControl:
          type: array
          items:
            type: string
            format: uuid
    RevisionDifference:
      type: object
      properties:
        fromCurrentToSelf:
          type: string
        fromSelfToCurrent:
          type: string
    RevisionDifferences:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/RevisionDifference'
        content:
          $ref: '#/components/schemas/RevisionDifference'
    RevisionViewModel:
      type: object
      properties:
        revisionId:
          type: integer
        name:
          type: string
        content:
          type: string
        dateTime:
          type: string
        changedBy:
          type: string
        status:
          type: string
        differences:
          $ref: '#/components/schemas/RevisionDifferences'
    RiskAssessmentUpdateMessage:
      type: object
      properties:
        description:
          type: string
        responsibleBy:
          type: string
          format: uuid
        probability:
          type: integer
        consequence:
          type: integer
        riskDescription:
          type: string
        measures:
          type: string
        assessmentDate:
          type: string
          format: date
        violatesInformationSecurityRequirements:
          type: boolean
        violatesIntegrityRequirement:
          type: boolean
        violatesConfidentialityRequirement:
          type: boolean
        violatesNonRepudiationRequirement:
          type: boolean
        violatesAvailabilityRequirement:
          type: boolean
        determinedBy:
          type: string
          format: uuid
        name:
          type: string
        pages:
          type: array
          items:
            type: integer
    ScheduledTimeMessage:
      description: >
        Used by time jobs, wrap a single property 'scheduledTime' representing a
        job fire time,
        the value of scheduledTime should be in format 'yyyy-MM-dd HH:mm:ss'
      type: object
      properties:
        scheduledTime:
          type: string
          format: date-time
        organizationId:
          type: integer
    SearchResultHit:
      type: object
      properties:
        id:
          type: string
        entity:
          type: string
        description:
          type: string
    TokenResult:
      type: object
      properties:
        email:
          type: string
    TokenViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        description:
          type: string
    UserCreateMessage:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    EmployeeSummariesUpdateMessage:
      type: object
      properties:
        summaries:
          enum:
            - NONE
            - ALL
            - SCHEDULED
          type: string
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes:
    UserSecurity:
      type: http
      scheme: basic
  links: {}
  callbacks: {}
