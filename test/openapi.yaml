openapi: 3.0.0
info:
  title: dabih-api
  version: 1.0-SNAPSHOT
servers:
  - url: 'https://app-api.trinnvis.no/'
paths:
  /accounts:
    post:
      responses:
        default:
          description: ''
      description: Create account for a new user.
      operationId: resource_AccountsResource_post_POST
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AccountCreateMessage'
        required: true
  /accounts/index:
    post:
      responses:
        default:
          description: ''
      description: Upload index for all the entities in specified organization.
      operationId: resource_AccountsResource_postIndex_POST
  /accounts/login:
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLoginViewModel'
      description: >-
        Creates a jwt link like we send to the user in the emails and redirects
        to that link.
      operationId: resource_AccountsResource_login_GET
      parameters:
        - name: id
          in: query
          description: user organization id
          schema:
            format: int32
            type: integer
        - name: userEmail
          in: query
          description: user email address
          schema:
            type: string
  /accounts/search:
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/AccountEmployeeViewModel'
      description: Fetch details of matching accounts.
      operationId: resource_AccountsResource_search_GET
      parameters:
        - name: q
          in: query
          description: query parameters
          schema:
            type: string
  /accounts/status:
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatusViewModel'
      description: Query account status.
      operationId: resource_AccountsResource_status_GET
  /accounts/token:
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResult'
      operationId: resource_AccountsResource_token_GET
      parameters:
        - name: t
          in: query
          schema:
            type: string
  /accounts/update-template:
    post:
      responses:
        default:
          description: ''
      description: Upload index for all the entities in specified organization.
      operationId: resource_AccountsResource_postUpdateTemplate_POST
  '/accounts/{accountEmailOrId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountViewModel'
      description: >-
        Fetches the list of organizations that the current authenticatedUser has
        access to.
      operationId: resource_AccountsResource_get_GET
    put:
      responses:
        default:
          description: ''
      description: Updates the account password.
      operationId: resource_AccountsResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AccountUpdateMessage'
        required: true
    parameters:
      - name: accountEmailOrId
        in: path
        required: true
        schema:
          type: string
        description: >-
          The username of the current authenticatedUser (email) or the numeric
          id of the current users account.
  '/accounts/{accountEmailOrId}/organizations':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountViewModel'
      description: >-
        This is the same as the normal get routine except that we return 412
        Preconditions failed instead of 401.
      operationId: resource_AccountsResource_getOrganizations_GET
    parameters:
      - name: accountEmailOrId
        in: path
        required: true
        schema:
          type: string
        description: >-
          The username of the current authenticatedUser (email) or the numeric
          id of the current users account.
  '/accounts/{accountId}':
    delete:
      responses:
        default:
          description: ''
      description: This endpoint is used to update account status.
      operationId: resource_AccountsResource_delete_DELETE
      parameters:
        - name: username
          in: query
          description: account status update message
          schema:
            type: string
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
        description: account id
  '/accounts/{accountId}/status':
    put:
      responses:
        default:
          description: ''
      description: This endpoint is used to update account status.
      operationId: resource_AccountsResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AccountStatusUpdateMessage'
        required: true
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
        description: account id
  '/accounts/{accountId}/transfer':
    post:
      responses:
        default:
          description: ''
      operationId: resource_AccountsResource_transfer_POST
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/TransferMessage'
        required: true
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
        description: account id
  '/accounts/{accountId}/invoice':
    post:
      responses:
        default:
          description: ''
      operationId: resource_AccountsResource_invoice_POST
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/InvoiceMessage'
        required: true
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
        description: account id
  '/accounts/{accountEmail}/accountStatus':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageViewModel'
      description: Check if the user already exist or not for specified account email.
      operationId: resource_AccountsResource_accountStatus_GET
    parameters:
      - name: accountEmail
        in: path
        required: true
        schema:
          type: string
        description: The account email
  '/accounts/{userEmail}/passwordRequest':
    post:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageViewModel'
      description: Sends a new password to the users email if it matches a current user.
      operationId: resource_AccountsResource_postPasswordRequest_POST
    parameters:
      - name: userEmail
        in: path
        required: true
        schema:
          type: string
        description: |
          The username of the current user (email)

          Request new user password
  /accounts/feedback:
    post:
      responses:
        default:
          description: ''
      description: Send user feedback to admin.
      operationId: resource_AccountsResource_postFeedback_POST
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/FeedbackMessage'
        required: true
  /issues:
    put:
      responses:
        default:
          description: ''
      description: Create an simple issue to the new system or the old system.
      operationId: resource_IssuesResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/IssuesRequest'
        required: true
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
  /issues/passwordRequest:
    post:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageViewModel'
      description: 'Returns password for a user, it works for both new user and old user.'
      operationId: resource_IssuesResource_postPasswordRequest_POST
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/PasswordRequest'
        required: true
  /issues/organizations:
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountViewModel'
      description: >-
        Returns organization information for a user, it works for both new user
        and old user.
      operationId: resource_IssuesResource_getOrganizations_GET
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
  /ticks/renewals:
    post:
      responses:
        default:
          description: ''
      operationId: resource_TicksResource_postRenewals_POST
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/ScheduledTimeMessage'
        required: true
  /ticks/reschedule:
    post:
      responses:
        default:
          description: ''
      description: This endpoint is used to reschedule.
      operationId: resource_TicksResource_reschedule_POST
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/ScheduledTimeMessage'
        required: true
  /ticks/summaries:
    post:
      responses:
        default:
          description: ''
      description: This endpoint is used to send summary.
      operationId: resource_TicksResource_summaries_POST
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/ScheduledTimeMessage'
        required: true
  /ticks/transfer-users:
    post:
      responses:
        default:
          description: ''
      description: |
        This endpoint is used to copy users from the old system so they

        can log in using the new syste in order to upgrade


        Only old accounts with email ending in @mailinator.
      operationId: resource_TicksResource_transferUsers_POST
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/ScheduledTimeMessage'
        required: true
  /ticks/reminders:
    post:
      responses:
        default:
          description: ''
      description: This endpoint is used to send reminder.
      operationId: resource_TicksResource_reminders_POST
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/ScheduledTimeMessage'
        required: true
  /organizations:
    post:
      responses:
        default:
          description: ''
      description: Create a account for an existing user.
      operationId: resource_OrganizationsResource_post_POST
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/OrganizationCreateMessage'
        required: true
  '/organizations/{organizationId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationViewModel'
      description: Get organization for specified organization id.
      operationId: resource_OrganizationResource_get_GET
    put:
      responses:
        default:
          description: ''
      description: Update organization for specified organization id.
      operationId: resource_OrganizationResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/OrganizationUpdateMessage'
        required: true
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/computers':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/ComputerViewModel'
      description: Get all the computers within the specified organization.
      operationId: resource_OrganizationComputerResource_getComputerViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/computers/{entityId}/attachments':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationComputerResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/computers/{entityId}/attachments/{fileName}':
    put:
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationComputerResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  title: body
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/computers/{entityId}/attachments/{attachmentUuid}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationComputerResource_getAttachment_GET
    delete:
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationComputerResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/computers/{entityId}/attachments/{attachmentUuid}/session':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationComputerResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/computers/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationComputerResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/computers/{computerId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputerViewModel'
      description: Get the computer with the specified computer id.
      operationId: resource_OrganizationComputerResource_getComputerViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: >-
        Update or create computer with the specified computer id, and the search
        index for the computer will also be updated or created.
      operationId: resource_OrganizationComputerResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/ComputerUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: >-
        Delete computer with the specified computer id, the search index of the
        computer will also be deleted.
      operationId: resource_OrganizationComputerResource_delete_DELETE
    parameters:
      - name: computerId
        in: path
        required: true
        schema:
          type: string
        description: The existing computer uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/constitutionalDocuments':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/ConstitutionalDocumentViewModel'
      description: Get all the constitutionalDocuments within the specified organization.
      operationId: >-
        resource_OrganizationConstitutionalDocumentResource_getConstitutionalDocumentViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/constitutionalDocuments/{entityId}/attachments':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationConstitutionalDocumentResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/constitutionalDocuments/{entityId}/attachments/{fileName}':
    put:
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationConstitutionalDocumentResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  title: body
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/constitutionalDocuments/{entityId}/attachments/{attachmentUuid}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationConstitutionalDocumentResource_getAttachment_GET
    delete:
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: >-
        resource_OrganizationConstitutionalDocumentResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/constitutionalDocuments/{entityId}/attachments/{attachmentUuid}/session':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: >-
        resource_OrganizationConstitutionalDocumentResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/constitutionalDocuments/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationConstitutionalDocumentResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/constitutionalDocuments/{constitutionalDocumentId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstitutionalDocumentViewModel'
      description: >-
        Get the constitutionalDocument with the specified constitutionalDocument
        id.
      operationId: >-
        resource_OrganizationConstitutionalDocumentResource_getConstitutionalDocumentViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: >
        Update or create constitutionalDocument with the specified
        constitutionalDocument id, the relate partners, employees and pages for
        the constitutionalDocument will also be updated or created,


        and the search index for the constitutionalDocument will also be updated
        or created.
      operationId: resource_OrganizationConstitutionalDocumentResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/ConstitutionalDocumentUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: >-
        Delete constitutionalDocument with the specified constitutionalDocument
        id, the search index of the constitutionalDocument will also be deleted.
      operationId: resource_OrganizationConstitutionalDocumentResource_delete_DELETE
    parameters:
      - name: constitutionalDocumentId
        in: path
        required: true
        schema:
          type: string
        description: The existing constitutionalDocument uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/constitutionalDocuments/{constitutionalDocumentId}/revisions':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/RevisionViewModel'
      operationId: resource_OrganizationConstitutionalDocumentResource_getRevisions_GET
    parameters:
      - name: constitutionalDocumentId
        in: path
        required: true
        schema:
          type: string
        description: The existing constitutionalDocument uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/contracts':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/ContractViewModel'
      description: Get all the contracts within the specified organization.
      operationId: resource_OrganizationContractResource_getContractViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/contracts/{entityId}/attachments':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationContractResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/contracts/{entityId}/attachments/{fileName}':
    put:
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationContractResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  title: body
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/contracts/{entityId}/attachments/{attachmentUuid}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationContractResource_getAttachment_GET
    delete:
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationContractResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/contracts/{entityId}/attachments/{attachmentUuid}/session':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationContractResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/contracts/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationContractResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/contracts/{contractId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractViewModel'
      description: Get the contract with the specified contract id.
      operationId: resource_OrganizationContractResource_getContractViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: >
        Update or create contract with the specified contract id, the relate
        partners, employees and pages for the contract will also be updated or
        created,


        and the search index for the contract will also be updated or created.
      operationId: resource_OrganizationContractResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/ContractUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: >-
        Delete contract with the specified contract id, the search index of the
        contract will also be deleted.
      operationId: resource_OrganizationContractResource_delete_DELETE
    parameters:
      - name: contractId
        in: path
        required: true
        schema:
          type: string
        description: The existing contract uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/contracts/{contractId}/revisions':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/RevisionViewModel'
      operationId: resource_OrganizationContractResource_getRevisions_GET
    parameters:
      - name: contractId
        in: path
        required: true
        schema:
          type: string
        description: The existing contract uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/documents':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/DocumentViewModel'
      description: Get all the documents within the specified organization.
      operationId: resource_OrganizationDocumentResource_getDocumentViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/documents/{entityId}/attachments':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationDocumentResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/documents/{entityId}/attachments/{fileName}':
    put:
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationDocumentResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  title: body
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/documents/{entityId}/attachments/{attachmentUuid}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationDocumentResource_getAttachment_GET
    delete:
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationDocumentResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/documents/{entityId}/attachments/{attachmentUuid}/session':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationDocumentResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/documents/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationDocumentResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/documents/{documentId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentViewModel'
      description: Get the document with the specified document id.
      operationId: resource_OrganizationDocumentResource_getDocumentViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: >-
        Update or create document with the specified document id, and the search
        index for the document will also be updated or created.
      operationId: resource_OrganizationDocumentResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/DocumentUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: >-
        Delete document with the specified document id, the search index of the
        document will also be deleted.
      operationId: resource_OrganizationDocumentResource_delete_DELETE
    parameters:
      - name: documentId
        in: path
        required: true
        schema:
          type: string
        description: The existing document uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/documents/{documentId}/revisions':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/RevisionViewModel'
      operationId: resource_OrganizationDocumentResource_getRevisions_GET
    parameters:
      - name: documentId
        in: path
        required: true
        schema:
          type: string
        description: The existing document uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/employees':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeViewModel'
      description: Get all employees for specified organization.
      operationId: resource_OrganizationEmployeeResource_getEmployeeViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/employees/{entityId}/attachments':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationEmployeeResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/employees/{entityId}/attachments/{fileName}':
    put:
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationEmployeeResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  title: body
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/employees/{entityId}/attachments/{attachmentUuid}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationEmployeeResource_getAttachment_GET
    delete:
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationEmployeeResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/employees/{entityId}/attachments/{attachmentUuid}/session':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationEmployeeResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/employees/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationEmployeeResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/employees/{employeeId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeViewModel'
      description: Get employee for specified employee id within specified organization.
      operationId: resource_OrganizationEmployeeResource_getEmployeeViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: >-
        Update or create employee with the specified employee id, and the search
        index for the employee will also be updated or created.
      operationId: resource_OrganizationEmployeeResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/EmployeeUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: Delete employee for specified employee id.
      operationId: resource_OrganizationEmployeeResource_delete_DELETE
    parameters:
      - name: employeeId
        in: path
        required: true
        schema:
          type: string
        description: The employee uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/externalConnections':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/ExternalConnectionViewModel'
      description: Get all the external connections within the specified organization.
      operationId: >-
        resource_OrganizationExternalConnectionResource_getExternalConnectionViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/externalConnections/{entityId}/attachments':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationExternalConnectionResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/externalConnections/{entityId}/attachments/{fileName}':
    put:
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationExternalConnectionResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  title: body
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/externalConnections/{entityId}/attachments/{attachmentUuid}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationExternalConnectionResource_getAttachment_GET
    delete:
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationExternalConnectionResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/externalConnections/{entityId}/attachments/{attachmentUuid}/session':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationExternalConnectionResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/externalConnections/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationExternalConnectionResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/externalConnections/{externalConnectionId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalConnectionViewModel'
      description: Get the external connection with the specified external connection id.
      operationId: >-
        resource_OrganizationExternalConnectionResource_getExternalConnectionViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: >-
        Update or create external connection with the specified external
        connection id, and the search index for the external connection will
        also be updated or created.
      operationId: resource_OrganizationExternalConnectionResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/ExternalConnectionUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: >-
        Delete external connection with the specified external connection id,
        the search index of the external connection will also be deleted.
      operationId: resource_OrganizationExternalConnectionResource_delete_DELETE
    parameters:
      - name: externalConnectionId
        in: path
        required: true
        schema:
          type: string
        description: The existing external connection uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/FunctionViewModel'
      description: >-
        Get all the functions within the specified organization, employees,
        rotations, pages and tasks also have been included in the function.
      operationId: resource_OrganizationFunctionResource_getFunctionViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunctionViewModel'
      description: >-
        Get the function with the specified function id, employees, rotations,
        pages and tasks also have been included in the function.
      operationId: resource_OrganizationFunctionResource_getFunctionViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: >
        Update or create function with the specified function id, the relate
        employees, rotations and pages for the function will also be updated or
        created,


        and the search index for the function will also be updated or created.
      operationId: resource_OrganizationFunctionResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/FunctionUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: >-
        Delete function with the specified function id, the search index of the
        function will also be deleted.
      operationId: resource_OrganizationFunctionResource_delete_DELETE
    parameters:
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/tasks':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/TaskViewModel'
      description: Get all the tasks within the specified organization and function.
      operationId: resource_OrganizationFunctionTaskResource_getFunctionTaskViewModels_GET
    parameters:
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/tasks/{entityId}/attachments':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationFunctionTaskResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/tasks/{entityId}/attachments/{fileName}':
    put:
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationFunctionTaskResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  title: body
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/tasks/{entityId}/attachments/{attachmentUuid}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationFunctionTaskResource_getAttachment_GET
    delete:
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationFunctionTaskResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/tasks/{entityId}/attachments/{attachmentUuid}/session':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationFunctionTaskResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/tasks/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationFunctionTaskResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/tasks/{taskId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskViewModel'
      description: Get the task with the specified task id.
      operationId: resource_OrganizationFunctionTaskResource_getTaskViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: >
        Update or create task with the specified task id, the relate schedules
        and pages for the task will also be updated or created,


        and the search index for the task will also be updated or created.
      operationId: resource_OrganizationFunctionTaskResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/FunctionTaskUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: >-
        Delete task with the specified task id, the search index of the task
        will also be deleted.
      operationId: resource_OrganizationFunctionTaskResource_delete_DELETE
    parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
        description: The existing task uuid
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/tasks/{taskId}/revisions':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/RevisionViewModel'
      operationId: resource_OrganizationFunctionTaskResource_getRevisions_GET
    parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
        description: The existing task uuid
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/tasks/{taskId}/done':
    post:
      responses:
        default:
          description: ''
      operationId: resource_OrganizationFunctionTaskResource_done_POST
    parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
        description: The existing task uuid
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{functionId}/revisions':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/RevisionViewModel'
      operationId: resource_OrganizationFunctionResource_getRevisions_GET
    parameters:
      - name: functionId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{entityId}/attachments':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationFunctionResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{entityId}/attachments/{fileName}':
    put:
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationFunctionResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  title: body
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{entityId}/attachments/{attachmentUuid}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationFunctionResource_getAttachment_GET
    delete:
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationFunctionResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{entityId}/attachments/{attachmentUuid}/session':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationFunctionResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationFunctionResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/functions/postpone-tasks':
    post:
      responses:
        default:
          description: ''
      description: Reschedule tasks.
      operationId: resource_OrganizationFunctionResource_postponeTasks_POST
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/guidelines':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/GuidelineViewModel'
      description: Get all the guideline within the specified organization.
      operationId: resource_OrganizationGuidelineResource_getGuidelineViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/guidelines/{entityId}/attachments':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationGuidelineResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/guidelines/{entityId}/attachments/{fileName}':
    put:
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationGuidelineResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  title: body
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/guidelines/{entityId}/attachments/{attachmentUuid}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationGuidelineResource_getAttachment_GET
    delete:
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationGuidelineResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/guidelines/{entityId}/attachments/{attachmentUuid}/session':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationGuidelineResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/guidelines/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationGuidelineResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/guidelines/{guidelineId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidelineViewModel'
      description: Get the guideline with the specified guideline id.
      operationId: resource_OrganizationGuidelineResource_getGuidelineViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: >-
        Update or create guideline with the specified guideline id, and the
        search index for the guideline will also be updated or created.
      operationId: resource_OrganizationGuidelineResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/GuidelineUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: >-
        Delete guideline with the specified guideline id, the search index of
        the guideline will also be deleted.
      operationId: resource_OrganizationGuidelineResource_delete_DELETE
    parameters:
      - name: guidelineId
        in: path
        required: true
        schema:
          type: string
        description: The existing guideline uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/guidelines/{guidelineId}/revisions':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/RevisionViewModel'
      operationId: resource_OrganizationGuidelineResource_getRevisions_GET
    parameters:
      - name: guidelineId
        in: path
        required: true
        schema:
          type: string
        description: The existing guideline uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/issues':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/IssueViewModel'
      description: Get all the issues within the specified organization.
      operationId: resource_OrganizationIssueResource_getIssueViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/issues/{entityId}/attachments':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationIssueResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/issues/{entityId}/attachments/{fileName}':
    put:
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationIssueResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  title: body
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/issues/{entityId}/attachments/{attachmentUuid}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationIssueResource_getAttachment_GET
    delete:
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationIssueResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/issues/{entityId}/attachments/{attachmentUuid}/session':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationIssueResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/issues/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationIssueResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/issues/{issueId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueViewModel'
      description: Get the issue with the specified issue id.
      operationId: resource_OrganizationIssueResource_getIssueViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: Update or create issue with the specified issue id.
      operationId: resource_OrganizationIssueResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/IssueUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: >-
        Delete issue with the specified issue id, the search index of the issue
        will also be deleted.
      operationId: resource_OrganizationIssueResource_delete_DELETE
    parameters:
      - name: issueId
        in: path
        required: true
        schema:
          type: string
        description: The existing issue uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/issues/{issueId}/simple':
    put:
      responses:
        default:
          description: ''
      description: Update or create simple issue with the specified issue id.
      operationId: resource_OrganizationIssueResource_putSimple_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/IssueSimpleUpdateMessage'
        required: true
    parameters:
      - name: issueId
        in: path
        required: true
        schema:
          type: string
        description: The existing issue uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/networks':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/NetworkViewModel'
      description: Get all the networks within the specified organization.
      operationId: resource_OrganizationNetworkResource_getNetworkViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/networks/{entityId}/attachments':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationNetworkResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/networks/{entityId}/attachments/{fileName}':
    put:
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationNetworkResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  title: body
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/networks/{entityId}/attachments/{attachmentUuid}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationNetworkResource_getAttachment_GET
    delete:
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationNetworkResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/networks/{entityId}/attachments/{attachmentUuid}/session':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationNetworkResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/networks/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationNetworkResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/networks/{networkId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkViewModel'
      description: Get the network with the specified network id.
      operationId: resource_OrganizationNetworkResource_getIssueViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: Update or create network with the specified network id.
      operationId: resource_OrganizationNetworkResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/NetworkUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: Delete network with the specified network id.
      operationId: resource_OrganizationNetworkResource_delete_DELETE
    parameters:
      - name: networkId
        in: path
        required: true
        schema:
          type: string
        description: The existing network uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/pages':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/PageViewModel'
      description: Get pages from word press.
      operationId: resource_OrganizationPageResource_get_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/PartnerViewModel'
      description: Get all the partners within the specified organization.
      operationId: resource_OrganizationPartnerResource_getPartnerViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{partnerId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerViewModel'
      description: Get the partner with the specified partner id.
      operationId: resource_OrganizationPartnerResource_getPartnerViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: >-
        Update or create partner with the specified partner id, and the search
        index for the partner will also be updated or created.
      operationId: resource_OrganizationPartnerResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/PartnerUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: >-
        Delete partner with the specified partner id, the search index of the
        partner will also be deleted.
      operationId: resource_OrganizationPartnerResource_delete_DELETE
    parameters:
      - name: partnerId
        in: path
        required: true
        schema:
          type: string
        description: The existing partner uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{partnerId}/contacts':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/ContactPersonViewModel'
      description: Get all the contacts within the specified organization and partner.
      operationId: >-
        resource_OrganizationPartnerContactResource_getContactPersonViewModels_GET
    parameters:
      - name: partnerId
        in: path
        required: true
        schema:
          type: string
        description: The existing partner uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{partnerId}/contacts/{entityId}/attachments':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationPartnerContactResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: partnerId
        in: path
        required: true
        schema:
          type: string
        description: The existing partner uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{partnerId}/contacts/{entityId}/attachments/{fileName}':
    put:
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationPartnerContactResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  title: body
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: partnerId
        in: path
        required: true
        schema:
          type: string
        description: The existing partner uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{partnerId}/contacts/{entityId}/attachments/{attachmentUuid}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationPartnerContactResource_getAttachment_GET
    delete:
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationPartnerContactResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: partnerId
        in: path
        required: true
        schema:
          type: string
        description: The existing partner uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{partnerId}/contacts/{entityId}/attachments/{attachmentUuid}/session':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationPartnerContactResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: partnerId
        in: path
        required: true
        schema:
          type: string
        description: The existing partner uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{partnerId}/contacts/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationPartnerContactResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: partnerId
        in: path
        required: true
        schema:
          type: string
        description: The existing partner uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{partnerId}/contacts/{contactId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactPersonViewModel'
      description: Get the contact with the specified contact id.
      operationId: >-
        resource_OrganizationPartnerContactResource_getContactPersonViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: >-
        Update or create contact with the specified contact id, and the search
        index for the contact will also be updated or created.
      operationId: resource_OrganizationPartnerContactResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/ContactPersonUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: >-
        Delete contact with the specified contact id, the search index of the
        contact will also be deleted, and invitation will also be updated.
      operationId: resource_OrganizationPartnerContactResource_delete_DELETE
    parameters:
      - name: contactId
        in: path
        required: true
        schema:
          type: string
        description: The existing contact uuid
      - name: partnerId
        in: path
        required: true
        schema:
          type: string
        description: The existing partner uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{entityId}/attachments':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationPartnerResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{entityId}/attachments/{fileName}':
    put:
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationPartnerResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  title: body
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{entityId}/attachments/{attachmentUuid}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationPartnerResource_getAttachment_GET
    delete:
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationPartnerResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{entityId}/attachments/{attachmentUuid}/session':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationPartnerResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/partners/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationPartnerResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/qualityReviews':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/QualityReviewViewModel'
      description: Get all quality reviews within specified organization.
      operationId: resource_OrganizationQualityReviewResource_getQualityReviewResource_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/qualityReviews/{qualityReviewId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityReviewViewModel'
      description: Get quality review within specified organization.
      operationId: resource_OrganizationQualityReviewResource_getQualityReviewViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: Update or create quality review with the specified quality review id.
      operationId: resource_OrganizationQualityReviewResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/QualityUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: Delete specified quality review within specified organization.
      operationId: resource_OrganizationQualityReviewResource_delete_DELETE
    parameters:
      - name: qualityReviewId
        in: path
        required: true
        schema:
          type: string
        description: The quality review uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/qualityReviews/{qualityReviewId}/qualityReviewMainGoals':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/QualityReviewMainGoalViewModel'
      description: >-
        Get all quality review main goals within specified organization and
        specified quality review.
      operationId: >-
        resource_OrganizationQualityReviewMainGoalResource_getQualityReviewMainGoalResource_GET
    parameters:
      - name: qualityReviewId
        in: path
        required: true
        schema:
          type: string
        description: The quality review uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/qualityReviews/{qualityReviewId}/qualityReviewMainGoals/{qualityReviewMainGoalId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityReviewMainGoalViewModel'
      description: >-
        Get quality review main goal for specified quality review main goal id
        within organization and quality review.
      operationId: >-
        resource_OrganizationQualityReviewMainGoalResource_getQualityReviewViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: >-
        Update or create quality review main goal with the specified quality
        review main goal id.
      operationId: resource_OrganizationQualityReviewMainGoalResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/QualityReviewMainGoalUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: >-
        Delete quality review main goal for specified quality review main goal
        id.
      operationId: resource_OrganizationQualityReviewMainGoalResource_delete_DELETE
    parameters:
      - name: qualityReviewMainGoalId
        in: path
        required: true
        schema:
          type: string
        description: The quality review main goal uuid.
      - name: qualityReviewId
        in: path
        required: true
        schema:
          type: string
        description: The quality review uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/qualityReviews/{qualityReviewId}/qualityReviewMainGoals/{qualityReviewMainGoalId}/qualityReviewSubGoals':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/QualityReviewSubGoalViewModel'
      description: >-
        Get all quality review sub goal within specified organization and
        specified quality review and specified quality review main goal.
      operationId: >-
        resource_OrganizationQualityReviewSubGoalResource_getQualityReviewMainGoalResource_GET
    parameters:
      - name: qualityReviewMainGoalId
        in: path
        required: true
        schema:
          type: string
        description: The quality review main goal uuid.
      - name: qualityReviewId
        in: path
        required: true
        schema:
          type: string
        description: The quality review uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/qualityReviews/{qualityReviewId}/qualityReviewMainGoals/{qualityReviewMainGoalId}/qualityReviewSubGoals/{qualityReviewSubGoalId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityReviewSubGoalViewModel'
      description: >-
        Get specified quality review sub goal within specified organization and
        specified quality review and specified quality review main goal.
      operationId: >-
        resource_OrganizationQualityReviewSubGoalResource_getQualityReviewViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: >-
        Update or create quality review sub goal with the specified quality
        review sub goal id.
      operationId: resource_OrganizationQualityReviewSubGoalResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/QualityReviewSubGoalUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: Delete quality review sub goal for specified quality review sub goal id.
      operationId: resource_OrganizationQualityReviewSubGoalResource_delete_DELETE
    parameters:
      - name: qualityReviewSubGoalId
        in: path
        required: true
        schema:
          type: string
        description: The quality review sub goal uuid.
      - name: qualityReviewMainGoalId
        in: path
        required: true
        schema:
          type: string
        description: The quality review main goal uuid.
      - name: qualityReviewId
        in: path
        required: true
        schema:
          type: string
        description: The quality review uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/qualityReviews/{qualityReviewId}/qualityReviewMainGoals/{qualityReviewMainGoalId}/qualityReviewSubGoals/{qualityReviewSubGoalId}/qualityReviewIndicators':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/QualityReviewIndicatorViewModel'
      description: >
        Get all quality review indicators within the specified organization and
        specified quality review


        and specified quality review main goal and specified quality review sub
        goal.
      operationId: >-
        resource_OrganizationQualityReviewIndicatorResource_getQualityReviewIndicatorResource_GET
    parameters:
      - name: qualityReviewSubGoalId
        in: path
        required: true
        schema:
          type: string
        description: The quality review sub goal uuid.
      - name: qualityReviewMainGoalId
        in: path
        required: true
        schema:
          type: string
        description: The quality review main goal uuid.
      - name: qualityReviewId
        in: path
        required: true
        schema:
          type: string
        description: The quality review uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/qualityReviews/{qualityReviewId}/qualityReviewMainGoals/{qualityReviewMainGoalId}/qualityReviewSubGoals/{qualityReviewSubGoalId}/qualityReviewIndicators/{qualityReviewIndicatorId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityReviewIndicatorViewModel'
      description: >
        Get specified quality review indicator within the specified organization
        and specified quality review


        and specified quality review main goal and specified quality review sub
        goal.
      operationId: >-
        resource_OrganizationQualityReviewIndicatorResource_getQualityReviewViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: >-
        Update or create quality review indicator with the specified quality
        review indicator id.
      operationId: resource_OrganizationQualityReviewIndicatorResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/QualityReviewIndicatorUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: >
        Delete specified quality review indicator within the specified
        organization and specified quality review


        and specified quality review main goal and specified quality review sub
        goal.
      operationId: resource_OrganizationQualityReviewIndicatorResource_delete_DELETE
    parameters:
      - name: qualityReviewIndicatorId
        in: path
        required: true
        schema:
          type: string
        description: The quality review indicator uuid.
      - name: qualityReviewSubGoalId
        in: path
        required: true
        schema:
          type: string
        description: The quality review sub goal uuid.
      - name: qualityReviewMainGoalId
        in: path
        required: true
        schema:
          type: string
        description: The quality review main goal uuid.
      - name: qualityReviewId
        in: path
        required: true
        schema:
          type: string
        description: The quality review uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/references':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceViewModel'
      description: Get reference links.
      operationId: resource_OrganizationReferenceResource_getReferenceLinks_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/reports':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/ReportViewModel'
      description: Get all the reports within the specified organization.
      operationId: resource_OrganizationReportResource_getReportViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/reports/{entityId}/attachments':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationReportResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/reports/{entityId}/attachments/{fileName}':
    put:
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationReportResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  title: body
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/reports/{entityId}/attachments/{attachmentUuid}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationReportResource_getAttachment_GET
    delete:
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationReportResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/reports/{entityId}/attachments/{attachmentUuid}/session':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationReportResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/reports/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationReportResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/reports/{reportId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportViewModel'
      description: Get the report with the specified report id.
      operationId: resource_OrganizationReportResource_getReportViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: >-
        Update or create report with the specified report id, and the search
        index for the report will also be updated or created.
      operationId: resource_OrganizationReportResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/ReportUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: >-
        Delete report with the specified report id, the search index of the
        report will also be deleted.
      operationId: resource_OrganizationReportResource_delete_DELETE
    parameters:
      - name: reportId
        in: path
        required: true
        schema:
          type: string
        description: The existing report uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/reports/{reportId}/revisions':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/RevisionViewModel'
      operationId: resource_OrganizationReportResource_getRevisions_GET
    parameters:
      - name: reportId
        in: path
        required: true
        schema:
          type: string
        description: The existing report uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/archive':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveViewModel'
      description: Return archive entities under organization.
      operationId: resource_OrganizationResource_getArchive_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/fetch':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteOrganizationViewModel'
      operationId: resource_OrganizationResource_getFetch_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/search':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/SearchResultHit'
      description: Search content from cloud search server.
      operationId: resource_OrganizationResource_getSearch_GET
      parameters:
        - name: limit
          in: query
          schema:
            default: 10
            format: int32
            type: integer
        - name: query
          in: query
          description: The query conditions
          schema:
            type: string
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/settings':
    put:
      responses:
        default:
          description: ''
      description: update organization setting for specified organization.
      operationId: resource_OrganizationResource_putSettings_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/OrganizationSettingsUpdateMessage'
        required: true
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/state':
    put:
      responses:
        default:
          description: ''
      description: Updates the account state.
      operationId: resource_OrganizationResource_putState_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AccountStateUpdateMessage'
        required: true
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/messages/{message}':
    delete:
      responses:
        default:
          description: ''
      description: Marks the message as deleted so it will not be shown again.
      operationId: resource_OrganizationResource_deleteMessage_DELETE
    parameters:
      - name: message
        in: path
        required: true
        schema:
          type: string
        description: message
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/riskAssessments':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/RiskAssessmentViewModel'
      description: Get all the riskAssessments within the specified organization.
      operationId: >-
        resource_OrganizationRiskAssessmentResource_getRiskAssessmentViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/riskAssessments/{entityId}/attachments':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationRiskAssessmentResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/riskAssessments/{entityId}/attachments/{fileName}':
    put:
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationRiskAssessmentResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  title: body
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/riskAssessments/{entityId}/attachments/{attachmentUuid}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationRiskAssessmentResource_getAttachment_GET
    delete:
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationRiskAssessmentResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/riskAssessments/{entityId}/attachments/{attachmentUuid}/session':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationRiskAssessmentResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/riskAssessments/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationRiskAssessmentResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/riskAssessments/{riskAssessmentId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskAssessmentViewModel'
      description: Get the riskAssessment with the specified riskAssessment id.
      operationId: >-
        resource_OrganizationRiskAssessmentResource_getRiskAssessmentViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: >-
        Update or create riskAssessment with the specified riskAssessment id,
        and the search index for the riskAssessment will also be updated or
        created.
      operationId: resource_OrganizationRiskAssessmentResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/RiskAssessmentUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: >-
        Delete riskAssessment with the specified riskAssessment id, the search
        index of the riskAssessment will also be deleted.
      operationId: resource_OrganizationRiskAssessmentResource_delete_DELETE
    parameters:
      - name: riskAssessmentId
        in: path
        required: true
        schema:
          type: string
        description: The existing riskAssessment uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/assets':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/AssetViewModel'
      description: Get all the assets within the specified organization.
      operationId: resource_OrganizationAssetResource_getAssetViewModels_GET
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/assets/{entityId}/attachments':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentViewModel'
      description: Get all attachments for specified function.
      operationId: resource_OrganizationAssetResource_getAttachments_GET
    parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/assets/{entityId}/attachments/{fileName}':
    put:
      responses:
        default:
          description: ''
      description: Upload attachments for specified function.
      operationId: resource_OrganizationAssetResource_putAttachment_PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  title: body
                  description: Upload file stream
                  type: string
        required: true
      parameters:
        - name: Content-Length
          in: header
          schema:
            type: string
    parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
        description: The upload file name
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/assets/{entityId}/attachments/{attachmentUuid}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for specified function.
      operationId: resource_OrganizationAssetResource_getAttachment_GET
    delete:
      responses:
        default:
          description: ''
      description: Delete specified attachment for specified function.
      operationId: resource_OrganizationAssetResource_deleteAttachment_DELETE
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/assets/{entityId}/attachments/{attachmentUuid}/session':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentViewModel'
      description: Download specified attachment for viewing.
      operationId: resource_OrganizationAssetResource_getAttachmentSession_GET
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/assets/{entityId}/attachments/{attachmentUuid}/properties':
    put:
      responses:
        default:
          description: ''
      description: update attachment file name.
      operationId: resource_OrganizationAssetResource_updateAttachment_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AttachmentPropertiesUpdateMessage'
        required: true
    parameters:
      - name: attachmentUuid
        in: path
        required: true
        schema:
          type: string
        description: The existing attachment uuid to be download
      - name: entityId
        in: path
        required: true
        schema:
          type: string
        description: The existing function uuid.
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  '/organizations/{organizationId}/assets/{assetId}':
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetViewModel'
      description: Get the asset with the specified asset id.
      operationId: resource_OrganizationAssetResource_getAssetViewModel_GET
    put:
      responses:
        default:
          description: ''
      description: >-
        Update or create asset with the specified asset id, and the search index
        for the asset will also be updated or created.
      operationId: resource_OrganizationAssetResource_put_PUT
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/AssetsUpdateMessage'
        required: true
    delete:
      responses:
        default:
          description: ''
      description: >-
        Delete asset with the specified asset id, the search index of the asset
        will also be deleted.
      operationId: resource_OrganizationAssetResource_delete_DELETE
    parameters:
      - name: assetId
        in: path
        required: true
        schema:
          type: string
        description: The existing asset uuid
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
        description: The organization id
  /tokens:
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: response
                type: array
                items:
                  $ref: '#/components/schemas/TokenViewModel'
      operationId: resource_TokensResource_get_GET
    post:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageViewModel'
      operationId: resource_TokensResource_post_POST
      requestBody:
        content:
          application/json:
            schema:
              title: body
              $ref: '#/components/schemas/TokenViewModel'
        required: true
  '/tokens/{uuid}':
    delete:
      responses:
        default:
          description: ''
      operationId: resource_TokensResource_delete_DELETE
    parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
        description: uuid
components:
  schemas:
    uuid:
      title: uuid
      pattern: >-
        ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
      type: string
    AccountCreateMessage:
      title: AccountCreateMessage
      description: >
        Extends the organization create message with email and password. Allows
        new users to create user and account. The

        email must not belong to an existing user.
      type: object
      properties:
        firstName:
          title: firstName
          type: string
        lastName:
          title: lastName
          type: string
        invoiceAddress:
          title: invoiceAddress
          type: string
        invoicePostcode:
          title: invoicePostcode
          type: string
        invoiceLocality:
          title: invoiceLocality
          type: string
        organizationName:
          title: organizationName
          type: string
        employeesCount:
          title: employeesCount
          type: integer
        specialTerms:
          title: specialTerms
          enum:
            - NONE
            - DNLF
            - NFF
          type: string
        businessEntityType:
          title: businessEntityType
          type: string
        email:
          title: email
          description: >-
            The email of the new user. This email is used to create a user and
            as the contact email of the new account.
          type: string
        password:
          title: password
          description: The password of the new user.
          type: string
    AdminAccountViewModel:
      title: AdminAccountViewModel
      type: object
      properties:
        id:
          title: id
          type: integer
        contactEmail:
          title: contactEmail
          type: string
        contactName:
          title: contactName
          type: string
        invoiceOrganization:
          title: invoiceOrganization
          type: string
        organizationName:
          title: organizationName
          type: string
        invitedBy:
          title: invitedBy
          type: string
        invoiceAddress:
          title: invoiceAddress
          type: string
        closed:
          title: closed
          type: boolean
        pending:
          title: pending
          type: boolean
        upgraded:
          title: upgraded
          type: boolean
        specialTerms:
          title: specialTerms
          enum:
            - NONE
            - DNLF
            - NFF
          type: string
        createdDate:
          title: createdDate
          type: string
        expires:
          title: expires
          type: string
          format: date
        amount:
          title: amount
          type: integer
        employees:
          title: employees
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AccountEmployeeViewModel'
        invoiceLink:
          title: invoiceLink
          type: string
    AccountEmployeeViewModel:
      title: AccountEmployeeViewModel
      type: object
      properties:
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        firstName:
          title: firstName
          type: string
        lastName:
          title: lastName
          type: string
        accessLevel:
          title: accessLevel
          enum:
            - NONE
            - READONLY
            - PAGE
            - USER
            - LEADER
          type: string
        associationType:
          title: associationType
          type: string
        email:
          title: email
          type: string
        phone:
          title: phone
          type: string
        profession:
          title: profession
          type: string
        status:
          title: status
          enum:
            - ACTIVE
            - LEAVE
            - TERMINATED
          type: string
    AccountLoginViewModel:
      title: AccountLoginViewModel
      type: object
      properties:
        location:
          title: location
          type: string
    AccountStateEmployeeViewModel:
      title: AccountStateEmployeeViewModel
      type: object
      properties:
        firstName:
          title: firstName
          type: string
        lastName:
          title: lastName
          type: string
        associationType:
          title: associationType
          type: string
        profession:
          title: profession
          type: string
        email:
          title: email
          type: string
        accessLevel:
          title: accessLevel
          type: string
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
      required:
        - uuid
    AccountStateUpdateMessage:
      title: AccountStateUpdateMessage
      description: >
        The AccountStateUpdateMessage is exactly the same as the account state
        view model. It is used as a memento


        object so that the on boarding sequence can save / retrieve current
        state.
      type: object
      properties:
        page:
          title: page
          type: integer
        pending:
          title: pending
          type: boolean
        businessEntityType:
          title: businessEntityType
          type: string
        employees:
          title: employees
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AccountStateEmployeeViewModel'
        activityCodes:
          title: activityCodes
          type: array
          items:
            title: items
            type: string
        leaderFunction:
          title: leaderFunction
          $ref: '#/components/schemas/uuid'
        healthSafetyAndEnvironmentalFunction:
          title: healthSafetyAndEnvironmentalFunction
          $ref: '#/components/schemas/uuid'
        assetFunction:
          title: assetFunction
          $ref: '#/components/schemas/uuid'
        computerFunction:
          title: computerFunction
          $ref: '#/components/schemas/uuid'
        economicsFunction:
          title: economicsFunction
          $ref: '#/components/schemas/uuid'
        qualityManagerFunction:
          title: qualityManagerFunction
          $ref: '#/components/schemas/uuid'
        professionalDevelopmentFunction:
          title: professionalDevelopmentFunction
          $ref: '#/components/schemas/uuid'
        humanResourcesFunction:
          title: humanResourcesFunction
          $ref: '#/components/schemas/uuid'
      required:
        - employees
        - leaderFunction
        - healthSafetyAndEnvironmentalFunction
        - assetFunction
        - computerFunction
        - economicsFunction
        - qualityManagerFunction
        - professionalDevelopmentFunction
        - humanResourcesFunction
    AccountStateViewModel:
      title: AccountStateViewModel
      type: object
      properties:
        page:
          title: page
          type: integer
        pending:
          title: pending
          type: boolean
        businessEntityType:
          title: businessEntityType
          type: string
        employees:
          title: employees
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AccountStateEmployeeViewModel'
        activityCodes:
          title: activityCodes
          type: array
          items:
            title: items
            type: string
        leaderFunction:
          title: leaderFunction
          $ref: '#/components/schemas/uuid'
        healthSafetyAndEnvironmentalFunction:
          title: healthSafetyAndEnvironmentalFunction
          $ref: '#/components/schemas/uuid'
        assetFunction:
          title: assetFunction
          $ref: '#/components/schemas/uuid'
        computerFunction:
          title: computerFunction
          $ref: '#/components/schemas/uuid'
        economicsFunction:
          title: economicsFunction
          $ref: '#/components/schemas/uuid'
        qualityManagerFunction:
          title: qualityManagerFunction
          $ref: '#/components/schemas/uuid'
        professionalDevelopmentFunction:
          title: professionalDevelopmentFunction
          $ref: '#/components/schemas/uuid'
        humanResourcesFunction:
          title: humanResourcesFunction
          $ref: '#/components/schemas/uuid'
      required:
        - employees
        - leaderFunction
        - healthSafetyAndEnvironmentalFunction
        - assetFunction
        - computerFunction
        - economicsFunction
        - qualityManagerFunction
        - professionalDevelopmentFunction
        - humanResourcesFunction
    AccountStatusUpdateMessage:
      title: AccountStatusUpdateMessage
      type: object
      properties:
        closed:
          title: closed
          type: boolean
        expires:
          title: expires
          type: string
          format: date
    AccountStatusViewModel:
      title: AccountStatusViewModel
      type: object
      properties:
        openAccountsCount:
          title: openAccountsCount
          type: integer
        closedAccountsCount:
          title: closedAccountsCount
          type: integer
        amount:
          title: amount
          type: integer
        monthlyInvoicingOverview:
          title: monthlyInvoicingOverview
          type: array
          items:
            title: items
            $ref: '#/components/schemas/MonthlyInvoicingOverview'
    MonthlyInvoicingOverview:
      title: MonthlyInvoicingOverview
      type: object
      properties:
        year:
          title: year
          type: integer
        month:
          title: month
          type: integer
        description:
          title: description
          type: string
        count:
          title: count
          type: integer
        amount:
          title: amount
          type: integer
    AccountUpdateMessage:
      title: AccountUpdateMessage
      type: object
      properties:
        password:
          title: password
          type: string
        organizationIdForSummaries:
          title: organizationIdForSummaries
          type: integer
        summaries:
          title: summaries
          enum:
            - NONE
            - ALL
            - SCHEDULED
          type: string
        email:
          title: email
          type: string
    AccountViewModel:
      title: AccountViewModel
      type: object
      properties:
        href:
          title: href
          type: string
        organizations:
          title: organizations
          type: array
          items:
            title: items
            $ref: '#/components/schemas/OrganizationReference'
    OrganizationReference:
      title: OrganizationReference
      type: object
      properties:
        name:
          title: name
          type: string
        ownerEmail:
          title: ownerEmail
          type: string
        expires:
          title: expires
          type: string
          format: date
        pending:
          title: pending
          type: boolean
        closed:
          title: closed
          type: boolean
        readonly:
          title: readonly
          type: boolean
        href:
          title: href
          type: string
        message:
          title: message
          type: string
        id:
          title: id
          type: integer
        state:
          title: state
          $ref: '#/components/schemas/AccountStateViewModel'
    UpgradableOrganizationViewModel:
      title: UpgradableOrganizationViewModel
      type: object
      properties:
        canUpgrade:
          title: canUpgrade
          type: boolean
        href:
          title: href
          type: string
        expires:
          title: expires
          type: string
          format: date
        ownerEmail:
          title: ownerEmail
          type: string
        readonly:
          title: readonly
          type: boolean
        name:
          title: name
          type: string
        id:
          title: id
          type: integer
    ArchiveViewModel:
      title: ArchiveViewModel
      type: object
      properties:
        assets:
          title: assets
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AssetViewModel'
        computers:
          title: computers
          type: array
          items:
            title: items
            $ref: '#/components/schemas/ComputerViewModel'
        constitutionalDocuments:
          title: constitutionalDocuments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/ConstitutionalDocumentViewModel'
        contacts:
          title: contacts
          type: array
          items:
            title: items
            $ref: '#/components/schemas/ContactPersonViewModel'
        contracts:
          title: contracts
          type: array
          items:
            title: items
            $ref: '#/components/schemas/ContractViewModel'
        documents:
          title: documents
          type: array
          items:
            title: items
            $ref: '#/components/schemas/DocumentViewModel'
        employees:
          title: employees
          type: array
          items:
            title: items
            $ref: '#/components/schemas/EmployeeViewModel'
        externalConnections:
          title: externalConnections
          type: array
          items:
            title: items
            $ref: '#/components/schemas/ExternalConnectionViewModel'
        functions:
          title: functions
          type: array
          items:
            title: items
            $ref: '#/components/schemas/FunctionViewModel'
        guidelines:
          title: guidelines
          type: array
          items:
            title: items
            $ref: '#/components/schemas/GuidelineViewModel'
        issues:
          title: issues
          type: array
          items:
            title: items
            $ref: '#/components/schemas/IssueViewModel'
        networks:
          title: networks
          type: array
          items:
            title: items
            $ref: '#/components/schemas/NetworkViewModel'
        partners:
          title: partners
          type: array
          items:
            title: items
            $ref: '#/components/schemas/PartnerViewModel'
        qualityReviews:
          title: qualityReviews
          type: array
          items:
            title: items
            $ref: '#/components/schemas/QualityReviewViewModel'
        qualityReviewIndicators:
          title: qualityReviewIndicators
          type: array
          items:
            title: items
            $ref: '#/components/schemas/QualityReviewIndicatorViewModel'
        qualityReviewMainGoals:
          title: qualityReviewMainGoals
          type: array
          items:
            title: items
            $ref: '#/components/schemas/QualityReviewMainGoalViewModel'
        qualityReviewSubGoals:
          title: qualityReviewSubGoals
          type: array
          items:
            title: items
            $ref: '#/components/schemas/QualityReviewSubGoalViewModel'
        reports:
          title: reports
          type: array
          items:
            title: items
            $ref: '#/components/schemas/ReportViewModel'
        riskAssessments:
          title: riskAssessments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/RiskAssessmentViewModel'
        tasks:
          title: tasks
          type: array
          items:
            title: items
            $ref: '#/components/schemas/TaskViewModel'
    AssetViewModel:
      title: AssetViewModel
      type: object
      properties:
        name:
          title: name
          type: string
        number:
          title: number
          type: string
        category:
          title: category
          type: string
        owner:
          title: owner
          type: string
        manufacturer:
          title: manufacturer
          type: string
        model:
          title: model
          type: string
        location:
          title: location
          type: string
        userManual:
          title: userManual
          type: string
        supplier:
          title: supplier
          type: string
        acquiredYear:
          title: acquiredYear
          type: string
        discardedYear:
          title: discardedYear
          type: string
        accessory:
          title: accessory
          type: string
        competency:
          title: competency
          type: string
        maintenance:
          title: maintenance
          type: string
        maintenanceInterval:
          title: maintenanceInterval
          type: string
        lastMaintenanceResultOk:
          title: lastMaintenanceResultOk
          type: string
        complianceDeclaration:
          title: complianceDeclaration
          type: string
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        requiresElectricity:
          title: requiresElectricity
          type: boolean
        storesSensitiveInformation:
          title: storesSensitiveInformation
          type: boolean
        maintenanceRequired:
          title: maintenanceRequired
          type: boolean
        assetVerified:
          title: assetVerified
          type: boolean
        documentationVerified:
          title: documentationVerified
          type: boolean
        documented:
          title: documented
          type: boolean
        lastMaintenanceComment:
          title: lastMaintenanceComment
          type: boolean
        lastMaintenanceDate:
          title: lastMaintenanceDate
          type: string
          format: date
        deleted:
          title: deleted
          type: boolean
        tasks:
          title: tasks
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        attachments:
          title: attachments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AttachmentViewModel'
    AttachmentViewModel:
      title: AttachmentViewModel
      type: object
      properties:
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        fullPath:
          title: fullPath
          type: string
        name:
          title: name
          type: string
        viewingSessionId:
          title: viewingSessionId
          type: string
        url:
          title: url
          type: string
    ComputerViewModel:
      title: ComputerViewModel
      type: object
      properties:
        notes:
          title: notes
          type: string
        name:
          title: name
          type: string
        location:
          title: location
          type: string
        type:
          title: type
          type: string
        journalType:
          title: journalType
          type: string
        journalSupplier:
          title: journalSupplier
          type: string
        journalSize:
          title: journalSize
          type: string
        messagingType:
          title: messagingType
          type: string
        messagingSupplier:
          title: messagingSupplier
          type: string
        localPrinter:
          title: localPrinter
          type: string
        antivirus:
          title: antivirus
          type: boolean
        laptop:
          title: laptop
          type: boolean
        storesPersonalInformation:
          title: storesPersonalInformation
          type: boolean
        storesJournal:
          title: storesJournal
          type: boolean
        journalRegistered:
          title: journalRegistered
          type: boolean
        journalHasElectronicMessaging:
          title: journalHasElectronicMessaging
          type: boolean
        messageMonitoring:
          title: messageMonitoring
          type: boolean
        autoLookupPatients:
          title: autoLookupPatients
          type: boolean
        autoLookupAddress:
          title: autoLookupAddress
          type: boolean
        autoLookupAddressNhn:
          title: autoLookupAddressNhn
          type: boolean
        autoUpdateAddressNhn:
          title: autoUpdateAddressNhn
          type: boolean
        deleted:
          title: deleted
          type: boolean
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        networkUuid:
          title: networkUuid
          $ref: '#/components/schemas/uuid'
        attachments:
          title: attachments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AttachmentViewModel'
    ConstitutionalDocumentViewModel:
      title: ConstitutionalDocumentViewModel
      type: object
      properties:
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        templateId:
          title: templateId
          type: string
        template:
          title: template
          type: string
        name:
          title: name
          type: string
        content:
          title: content
          type: string
        helpContent:
          title: helpContent
          type: string
        classification:
          title: classification
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        validFromDate:
          title: validFromDate
          type: string
          format: date
        validToDate:
          title: validToDate
          type: string
          format: date
        deleted:
          title: deleted
          type: boolean
        employees:
          title: employees
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        partners:
          title: partners
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        accessControl:
          title: accessControl
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        attachments:
          title: attachments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AttachmentViewModel'
    ContactPersonViewModel:
      title: ContactPersonViewModel
      type: object
      properties:
        notes:
          title: notes
          type: string
        email:
          title: email
          type: string
        lastName:
          title: lastName
          type: string
        firstName:
          title: firstName
          type: string
        telephone:
          title: telephone
          type: string
        mobilePhone:
          title: mobilePhone
          type: string
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        partner:
          title: partner
          $ref: '#/components/schemas/uuid'
        accessLevel:
          title: accessLevel
          enum:
            - NONE
            - READONLY
            - PAGE
            - USER
            - LEADER
          type: string
        deleted:
          title: deleted
          type: boolean
        attachments:
          title: attachments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AttachmentViewModel'
    ContractViewModel:
      title: ContractViewModel
      type: object
      properties:
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        templateId:
          title: templateId
          type: string
        templateEmployeeId:
          title: templateEmployeeId
          type: string
        documentLocation:
          title: documentLocation
          type: string
        category:
          title: category
          type: string
        name:
          title: name
          type: string
        sideCode:
          title: sideCode
          type: string
        status:
          title: status
          type: string
        content:
          title: content
          type: string
        affiliation:
          title: affiliation
          type: string
        profession:
          title: profession
          type: string
        helpContent:
          title: helpContent
          type: string
        classification:
          title: classification
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        validFromDate:
          title: validFromDate
          type: string
          format: date
        validToDate:
          title: validToDate
          type: string
          format: date
        required:
          title: required
          type: boolean
        relationsLocked:
          title: relationsLocked
          type: boolean
        deleted:
          title: deleted
          type: boolean
        employees:
          title: employees
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        partners:
          title: partners
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        accessControl:
          title: accessControl
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        pages:
          title: pages
          type: array
          items:
            title: items
            type: integer
        attachments:
          title: attachments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AttachmentViewModel'
    DocumentViewModel:
      title: DocumentViewModel
      type: object
      properties:
        validFromDate:
          title: validFromDate
          type: string
          format: date
        validToDate:
          title: validToDate
          type: string
          format: date
        category:
          title: category
          type: string
        template:
          title: template
          type: string
        name:
          title: name
          type: string
        status:
          title: status
          type: string
        content:
          title: content
          type: string
        type:
          title: type
          type: string
        classification:
          title: classification
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        helpContent:
          title: helpContent
          type: string
        deleted:
          title: deleted
          type: boolean
        pages:
          title: pages
          type: array
          items:
            title: items
            type: integer
        accessControl:
          title: accessControl
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        attachments:
          title: attachments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AttachmentViewModel'
    EmployeeViewModel:
      title: EmployeeViewModel
      type: object
      properties:
        postcode1:
          title: postcode1
          type: string
        postcode2:
          title: postcode2
          type: string
        email:
          title: email
          type: string
        phone:
          title: phone
          type: string
        secondaryPhone:
          title: secondaryPhone
          type: string
        associationType:
          title: associationType
          type: string
        profession:
          title: profession
          type: string
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        address:
          title: address
          type: string
        address2:
          title: address2
          type: string
        notes:
          title: notes
          type: string
        lastName:
          title: lastName
          type: string
        firstName:
          title: firstName
          type: string
        group:
          title: group
          type: boolean
        herNumber:
          title: herNumber
          type: string
        hprNumber:
          title: hprNumber
          type: string
        expertise:
          title: expertise
          type: string
        deletable:
          title: deletable
          type: boolean
        deleted:
          title: deleted
          type: boolean
        issues:
          title: issues
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        riskAssessment:
          title: riskAssessment
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        externalConnections:
          title: externalConnections
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        qualitySubGoalsResponsible:
          title: qualitySubGoalsResponsible
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        accessLevel:
          title: accessLevel
          enum:
            - NONE
            - READONLY
            - PAGE
            - USER
            - LEADER
          type: string
        speciality:
          title: speciality
          type: string
        attachments:
          title: attachments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AttachmentViewModel'
        status:
          title: status
          enum:
            - ACTIVE
            - LEAVE
            - TERMINATED
          type: string
        summaries:
          title: summaries
          enum:
            - NONE
            - ALL
            - SCHEDULED
          type: string
    ExternalConnectionViewModel:
      title: ExternalConnectionViewModel
      type: object
      properties:
        name:
          title: name
          type: string
        type:
          title: type
          type: string
        connectionType:
          title: connectionType
          enum:
            - NONE
            - NHN
            - OTHER
          type: string
        description:
          title: description
          type: string
        deleted:
          title: deleted
          type: boolean
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        employeeUuid:
          title: employeeUuid
          $ref: '#/components/schemas/uuid'
        partnerUuid:
          title: partnerUuid
          $ref: '#/components/schemas/uuid'
        networkUuid:
          title: networkUuid
          $ref: '#/components/schemas/uuid'
        supplierUuid:
          title: supplierUuid
          $ref: '#/components/schemas/uuid'
        attachments:
          title: attachments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AttachmentViewModel'
    FunctionViewModel:
      title: FunctionViewModel
      type: object
      properties:
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        responsibility:
          title: responsibility
          type: string
        type:
          title: type
          enum:
            - SINGLE
            - ROTATED
            - SIMULTANEOUS
            - COMMON
          type: string
        description:
          title: description
          type: string
        rotation:
          title: rotation
          type: string
        name:
          title: name
          type: string
        status:
          title: status
          type: string
        category:
          title: category
          type: string
        template:
          title: template
          type: string
        helpContent:
          title: helpContent
          type: string
        responsibilityLocked:
          title: responsibilityLocked
          type: boolean
        deleted:
          title: deleted
          type: boolean
        employees:
          title: employees
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        rotations:
          title: rotations
          type: array
          items:
            title: items
            $ref: '#/components/schemas/FunctionRotationViewModel'
        pages:
          title: pages
          type: array
          items:
            title: items
            type: integer
        tasks:
          title: tasks
          type: array
          items:
            title: items
            $ref: '#/components/schemas/TaskViewModel'
        attachments:
          title: attachments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AttachmentViewModel'
    FunctionRotationViewModel:
      title: FunctionRotationViewModel
      type: object
      properties:
        employee:
          title: employee
          $ref: '#/components/schemas/uuid'
        day1:
          title: day1
          type: integer
        day2:
          title: day2
          type: integer
        day3:
          title: day3
          type: integer
        day4:
          title: day4
          type: integer
        day5:
          title: day5
          type: integer
        day6:
          title: day6
          type: integer
        day7:
          title: day7
          type: integer
        startDate:
          title: startDate
          type: string
          format: date
    TaskViewModel:
      title: TaskViewModel
      type: object
      properties:
        reminder:
          title: reminder
          enum:
            - NONE
            - AT_START
            - ONE_HOUR_BEFORE
            - TWO_HOURS_BEFORE
            - THREE_HOURS_BEFORE
            - FIVE_HOURS_BEFORE
          type: string
        type:
          title: type
          type: string
        situation:
          title: situation
          type: string
        procedures:
          title: procedures
          type: string
        name:
          title: name
          type: string
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        function:
          title: function
          $ref: '#/components/schemas/uuid'
        asset:
          title: asset
          $ref: '#/components/schemas/uuid'
        employee:
          title: employee
          $ref: '#/components/schemas/uuid'
        rrule:
          title: rrule
          type: string
        helpContent:
          title: helpContent
          type: string
        deleted:
          title: deleted
          type: boolean
        locked:
          title: locked
          type: boolean
        lastExecuted:
          title: lastExecuted
          type: string
          format: date
        pages:
          title: pages
          type: array
          items:
            title: items
            type: integer
        attachments:
          title: attachments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AttachmentViewModel'
    GuidelineViewModel:
      title: GuidelineViewModel
      type: object
      properties:
        category:
          title: category
          type: string
        template:
          title: template
          type: string
        name:
          title: name
          type: string
        status:
          title: status
          type: string
        content:
          title: content
          type: string
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        helpContent:
          title: helpContent
          type: string
        deleted:
          title: deleted
          type: boolean
        pages:
          title: pages
          type: array
          items:
            title: items
            type: integer
        classification:
          title: classification
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        accessControl:
          title: accessControl
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        attachments:
          title: attachments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AttachmentViewModel'
    IssueViewModel:
      title: IssueViewModel
      type: object
      properties:
        notes:
          title: notes
          type: string
        description:
          title: description
          type: string
        identifiedMeasures:
          title: identifiedMeasures
          type: string
        shallEvaluated:
          title: shallEvaluated
          type: boolean
        immediateMeasures:
          title: immediateMeasures
          type: string
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        furtherMeasures:
          title: furtherMeasures
          type: string
        name:
          title: name
          type: string
        correction:
          title: correction
          type: string
        registeredBy:
          title: registeredBy
          $ref: '#/components/schemas/uuid'
        reportedTo:
          title: reportedTo
          $ref: '#/components/schemas/uuid'
        reportedBy:
          title: reportedBy
          $ref: '#/components/schemas/uuid'
        responsibleBy:
          title: responsibleBy
          $ref: '#/components/schemas/uuid'
        processedBy:
          title: processedBy
          $ref: '#/components/schemas/uuid'
        evaluatedBy:
          title: evaluatedBy
          $ref: '#/components/schemas/uuid'
        processedDate:
          title: processedDate
          type: string
          format: date
        reportedDate:
          title: reportedDate
          type: string
          format: date
        evaluatedDate:
          title: evaluatedDate
          type: string
          format: date
        eventDate:
          title: eventDate
          type: string
          format: date
        registeredDate:
          title: registeredDate
          type: string
          format: date
        evaluated:
          title: evaluated
          type: boolean
        implementedMeasure:
          title: implementedMeasure
          type: boolean
        reportedLabourInspection:
          title: reportedLabourInspection
          type: boolean
        reportedInspectorate:
          title: reportedInspectorate
          type: boolean
        reportedSafetyManager:
          title: reportedSafetyManager
          type: boolean
        reportedCountyMedical:
          title: reportedCountyMedical
          type: boolean
        deleted:
          title: deleted
          type: boolean
        informationLeakagePossibility:
          title: informationLeakagePossibility
          type: boolean
        personDamagePossibility:
          title: personDamagePossibility
          type: boolean
        relateToEmployees:
          title: relateToEmployees
          type: boolean
        relateToEquipment:
          title: relateToEquipment
          type: boolean
        relateToPatient:
          title: relateToPatient
          type: boolean
        relateToPatientInstitution:
          title: relateToPatientInstitution
          type: boolean
        relateToRadiation:
          title: relateToRadiation
          type: boolean
        requiresMeasures:
          title: requiresMeasures
          type: boolean
        requireEvaluation:
          title: requireEvaluation
          type: boolean
        measuresSatisfactorily:
          title: measuresSatisfactorily
          type: boolean
        evaluatedOk:
          title: evaluatedOk
          type: boolean
        pages:
          title: pages
          type: array
          items:
            title: items
            type: integer
        attachments:
          title: attachments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AttachmentViewModel'
    NetworkViewModel:
      title: NetworkViewModel
      type: object
      properties:
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        name:
          title: name
          type: string
        nhnDescription:
          title: nhnDescription
          type: string
        otherDescription:
          title: otherDescription
          type: string
        connectionType:
          title: connectionType
          type: string
        supplierUuid:
          title: supplierUuid
          $ref: '#/components/schemas/uuid'
        attachments:
          title: attachments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AttachmentViewModel'
        deleted:
          title: deleted
          type: boolean
    PartnerViewModel:
      title: PartnerViewModel
      type: object
      properties:
        email:
          title: email
          type: string
        url:
          title: url
          type: string
        notes:
          title: notes
          type: string
        industry:
          title: industry
          type: string
        name:
          title: name
          type: string
        address:
          title: address
          type: string
        phone:
          title: phone
          type: string
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        deleted:
          title: deleted
          type: boolean
        remoteAccess:
          title: remoteAccess
          type: boolean
        physicalAccess:
          title: physicalAccess
          type: boolean
        pageAccess:
          title: pageAccess
          type: boolean
        deletable:
          title: deletable
          type: boolean
        helpContent:
          title: helpContent
          type: string
        externalConnections:
          title: externalConnections
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        contacts:
          title: contacts
          type: array
          items:
            title: items
            $ref: '#/components/schemas/ContactPersonViewModel'
        pages:
          title: pages
          type: array
          items:
            title: items
            type: integer
        attachments:
          title: attachments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AttachmentViewModel'
    QualityReviewViewModel:
      title: QualityReviewViewModel
      type: object
      properties:
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        name:
          title: name
          type: string
        mainGoals:
          title: mainGoals
          type: array
          items:
            title: items
            $ref: '#/components/schemas/QualityReviewMainGoalViewModel'
        deleted:
          title: deleted
          type: boolean
    QualityReviewMainGoalViewModel:
      title: QualityReviewMainGoalViewModel
      type: object
      properties:
        description:
          title: description
          type: string
        name:
          title: name
          type: string
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        subGoals:
          title: subGoals
          type: array
          items:
            title: items
            $ref: '#/components/schemas/QualityReviewSubGoalViewModel'
        deleted:
          title: deleted
          type: boolean
    QualityReviewSubGoalViewModel:
      title: QualityReviewSubGoalViewModel
      type: object
      properties:
        name:
          title: name
          type: string
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        responsibleBy:
          title: responsibleBy
          $ref: '#/components/schemas/uuid'
        indicators:
          title: indicators
          type: array
          items:
            title: items
            $ref: '#/components/schemas/QualityReviewIndicatorViewModel'
        deleted:
          title: deleted
          type: boolean
    QualityReviewIndicatorViewModel:
      title: QualityReviewIndicatorViewModel
      type: object
      properties:
        name:
          title: name
          type: string
        assessment:
          title: assessment
          type: string
        assessmentDate:
          title: assessmentDate
          type: string
        approved:
          title: approved
          type: boolean
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
    ReportViewModel:
      title: ReportViewModel
      type: object
      properties:
        name:
          title: name
          type: string
        content:
          title: content
          type: string
        reportDate:
          title: reportDate
          type: string
          format: date
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        employeeUuid:
          title: employeeUuid
          $ref: '#/components/schemas/uuid'
        helpContent:
          title: helpContent
          type: string
        classification:
          title: classification
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        deleted:
          title: deleted
          type: boolean
        pages:
          title: pages
          type: array
          items:
            title: items
            type: integer
        accessControl:
          title: accessControl
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        attachments:
          title: attachments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AttachmentViewModel'
    RiskAssessmentViewModel:
      title: RiskAssessmentViewModel
      type: object
      properties:
        probability:
          title: probability
          type: integer
        consequence:
          title: consequence
          type: integer
        description:
          title: description
          type: string
        riskDescription:
          title: riskDescription
          type: string
        name:
          title: name
          type: string
        measures:
          title: measures
          type: string
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        helpContent:
          title: helpContent
          type: string
        assessmentDate:
          title: assessmentDate
          type: string
          format: date
        violatesInformationSecurityRequirements:
          title: violatesInformationSecurityRequirements
          type: boolean
        violatesIntegrityRequirement:
          title: violatesIntegrityRequirement
          type: boolean
        violatesConfidentialityRequirement:
          title: violatesConfidentialityRequirement
          type: boolean
        violatesNonRepudiationRequirement:
          title: violatesNonRepudiationRequirement
          type: boolean
        violatesAvailabilityRequirement:
          title: violatesAvailabilityRequirement
          type: boolean
        deleted:
          title: deleted
          type: boolean
        responsibleBy:
          title: responsibleBy
          $ref: '#/components/schemas/uuid'
        determinedBy:
          title: determinedBy
          $ref: '#/components/schemas/uuid'
        pages:
          title: pages
          type: array
          items:
            title: items
            type: integer
        attachments:
          title: attachments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AttachmentViewModel'
    AssetsUpdateMessage:
      title: AssetsUpdateMessage
      type: object
      properties:
        name:
          title: name
          type: string
        number:
          title: number
          type: string
        category:
          title: category
          type: string
        owner:
          title: owner
          type: string
        manufacturer:
          title: manufacturer
          type: string
        model:
          title: model
          type: string
        location:
          title: location
          type: string
        userManual:
          title: userManual
          type: string
        supplier:
          title: supplier
          type: string
        acquiredYear:
          title: acquiredYear
          type: string
        discardedYear:
          title: discardedYear
          type: string
        accessory:
          title: accessory
          type: string
        competency:
          title: competency
          type: string
        maintenance:
          title: maintenance
          type: string
        maintenanceInterval:
          title: maintenanceInterval
          type: string
        complianceDeclaration:
          title: complianceDeclaration
          type: string
        requiresElectricity:
          title: requiresElectricity
          type: boolean
        storesSensitiveInformation:
          title: storesSensitiveInformation
          type: boolean
        maintenanceRequired:
          title: maintenanceRequired
          type: boolean
        assetVerified:
          title: assetVerified
          type: boolean
        documentationVerified:
          title: documentationVerified
          type: boolean
        documented:
          title: documented
          type: boolean
    AttachmentPropertiesUpdateMessage:
      title: AttachmentPropertiesUpdateMessage
      description: Update the name of the attachment.
      type: object
      properties:
        name:
          title: name
          type: string
      required:
        - name
    CompleteOrganizationViewModel:
      title: CompleteOrganizationViewModel
      type: object
      properties:
        organizationId:
          title: organizationId
          type: integer
        href:
          title: href
          type: string
        address:
          title: address
          type: string
        notes:
          title: notes
          type: string
        officeAddress:
          title: officeAddress
          type: string
        officePostcode:
          title: officePostcode
          type: string
        email:
          title: email
          type: string
        herNumber:
          title: herNumber
          type: string
        name:
          title: name
          type: string
        businessEntityType:
          title: businessEntityType
          type: string
        organizationNumber:
          title: organizationNumber
          type: string
        mailAddress:
          title: mailAddress
          type: string
        mailPostcode:
          title: mailPostcode
          type: string
        fax:
          title: fax
          type: string
        phone:
          title: phone
          type: string
        type:
          title: type
          type: string
        url:
          title: url
          type: string
        invoiceReceiver:
          title: invoiceReceiver
          type: string
        invoicePostcode:
          title: invoicePostcode
          type: string
        invoiceLocality:
          title: invoiceLocality
          type: string
        reference:
          title: reference
          type: string
        invoiceAddress:
          title: invoiceAddress
          type: string
        ownerEmail:
          title: ownerEmail
          type: string
        settingsHref:
          title: settingsHref
          type: string
        activityCodes:
          title: activityCodes
          type: array
          items:
            title: items
            type: string
        specialTerms:
          title: specialTerms
          enum:
            - NONE
            - DNLF
            - NFF
          type: string
        functions:
          title: functions
          type: array
          items:
            title: items
            $ref: '#/components/schemas/FunctionViewModel'
        issues:
          title: issues
          type: array
          items:
            title: items
            $ref: '#/components/schemas/IssueViewModel'
        partners:
          title: partners
          type: array
          items:
            title: items
            $ref: '#/components/schemas/PartnerViewModel'
        constitutionalDocuments:
          title: constitutionalDocuments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/ConstitutionalDocumentViewModel'
        computers:
          title: computers
          type: array
          items:
            title: items
            $ref: '#/components/schemas/ComputerViewModel'
        contracts:
          title: contracts
          type: array
          items:
            title: items
            $ref: '#/components/schemas/ContractViewModel'
        guidelines:
          title: guidelines
          type: array
          items:
            title: items
            $ref: '#/components/schemas/GuidelineViewModel'
        networks:
          title: networks
          type: array
          items:
            title: items
            $ref: '#/components/schemas/NetworkViewModel'
        documents:
          title: documents
          type: array
          items:
            title: items
            $ref: '#/components/schemas/DocumentViewModel'
        employees:
          title: employees
          type: array
          items:
            title: items
            $ref: '#/components/schemas/EmployeeViewModel'
        externalConnections:
          title: externalConnections
          type: array
          items:
            title: items
            $ref: '#/components/schemas/ExternalConnectionViewModel'
        qualityReviews:
          title: qualityReviews
          type: array
          items:
            title: items
            $ref: '#/components/schemas/QualityReviewViewModel'
        riskAssessments:
          title: riskAssessments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/RiskAssessmentViewModel'
        reports:
          title: reports
          type: array
          items:
            title: items
            $ref: '#/components/schemas/ReportViewModel'
        assets:
          title: assets
          type: array
          items:
            title: items
            $ref: '#/components/schemas/AssetViewModel'
    ComputerUpdateMessage:
      title: ComputerUpdateMessage
      type: object
      properties:
        name:
          title: name
          type: string
        notes:
          title: notes
          type: string
        location:
          title: location
          type: string
        type:
          title: type
          type: string
        journalType:
          title: journalType
          type: string
        journalSupplier:
          title: journalSupplier
          type: string
        journalSize:
          title: journalSize
          type: string
        messagingType:
          title: messagingType
          type: string
        messagingSupplier:
          title: messagingSupplier
          type: string
        localPrinter:
          title: localPrinter
          type: string
        antivirus:
          title: antivirus
          type: boolean
        laptop:
          title: laptop
          type: boolean
        storesPersonalInformation:
          title: storesPersonalInformation
          type: boolean
        storesJournal:
          title: storesJournal
          type: boolean
        journalRegistered:
          title: journalRegistered
          type: boolean
        journalHasElectronicMessaging:
          title: journalHasElectronicMessaging
          type: boolean
        messageMonitoring:
          title: messageMonitoring
          type: boolean
        autoLookupPatients:
          title: autoLookupPatients
          type: boolean
        autoLookupAddress:
          title: autoLookupAddress
          type: boolean
        autoLookupAddressNhn:
          title: autoLookupAddressNhn
          type: boolean
        autoUpdateAddressNhn:
          title: autoUpdateAddressNhn
          type: boolean
        networkUuid:
          title: networkUuid
          $ref: '#/components/schemas/uuid'
    ConstitutionalDocumentUpdateMessage:
      title: ConstitutionalDocumentUpdateMessage
      type: object
      properties:
        templateId:
          title: templateId
          type: string
        template:
          title: template
          type: string
        name:
          title: name
          type: string
        content:
          title: content
          type: string
        validFromDate:
          title: validFromDate
          type: string
          format: date
        validToDate:
          title: validToDate
          type: string
          format: date
        employees:
          title: employees
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        partners:
          title: partners
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        classification:
          title: classification
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        accessControl:
          title: accessControl
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
    ContactPersonUpdateMessage:
      title: ContactPersonUpdateMessage
      type: object
      properties:
        notes:
          title: notes
          type: string
        email:
          title: email
          type: string
        lastName:
          title: lastName
          type: string
        firstName:
          title: firstName
          type: string
        telephone:
          title: telephone
          type: string
        mobilePhone:
          title: mobilePhone
          type: string
        accessLevel:
          title: accessLevel
          enum:
            - NONE
            - READONLY
            - PAGE
            - USER
            - LEADER
          type: string
      required:
        - accessLevel
    ContractUpdateMessage:
      title: ContractUpdateMessage
      type: object
      properties:
        employees:
          title: employees
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        partners:
          title: partners
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        pages:
          title: pages
          type: array
          items:
            title: items
            type: integer
        templateId:
          title: templateId
          type: string
        templateEmployeeId:
          title: templateEmployeeId
          type: string
        documentLocation:
          title: documentLocation
          type: string
        category:
          title: category
          type: string
        name:
          title: name
          type: string
        sideCode:
          title: sideCode
          type: string
        status:
          title: status
          type: string
        content:
          title: content
          type: string
        affiliation:
          title: affiliation
          type: string
        profession:
          title: profession
          type: string
        classification:
          title: classification
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        accessControl:
          title: accessControl
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        validFromDate:
          title: validFromDate
          type: string
          format: date
        validToDate:
          title: validToDate
          type: string
          format: date
        required:
          title: required
          type: boolean
    DocumentUpdateMessage:
      title: DocumentUpdateMessage
      type: object
      properties:
        classification:
          title: classification
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        pages:
          title: pages
          type: array
          items:
            title: items
            type: integer
        validFromDate:
          title: validFromDate
          type: string
          format: date
        validToDate:
          title: validToDate
          type: string
          format: date
        category:
          title: category
          type: string
        template:
          title: template
          type: string
        name:
          title: name
          type: string
        status:
          title: status
          type: string
        content:
          title: content
          type: string
        type:
          title: type
          type: string
        accessControl:
          title: accessControl
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
      required:
        - classification
    EmployeeUpdateMessage:
      title: EmployeeUpdateMessage
      type: object
      properties:
        address:
          title: address
          type: string
        profession:
          title: profession
          type: string
        notes:
          title: notes
          type: string
        email:
          title: email
          type: string
        lastName:
          title: lastName
          type: string
        firstName:
          title: firstName
          type: string
        group:
          title: group
          type: boolean
        herNumber:
          title: herNumber
          type: string
        hprNumber:
          title: hprNumber
          type: string
        expertise:
          title: expertise
          type: string
        associationType:
          title: associationType
          type: string
        accessLevel:
          title: accessLevel
          enum:
            - NONE
            - READONLY
            - PAGE
            - USER
            - LEADER
          type: string
        phone:
          title: phone
          type: string
        secondaryPhone:
          title: secondaryPhone
          type: string
        speciality:
          title: speciality
          type: string
        status:
          title: status
          enum:
            - ACTIVE
            - LEAVE
            - TERMINATED
          type: string
        functionAssignments:
          title: functionAssignments
          type: array
          items:
            title: items
            $ref: '#/components/schemas/FunctionAssignment'
      required:
        - accessLevel
    FunctionAssignment:
      title: FunctionAssignment
      type: object
      properties:
        functionUuid:
          title: functionUuid
          $ref: '#/components/schemas/uuid'
        employeeUuid:
          title: employeeUuid
          $ref: '#/components/schemas/uuid'
    ExternalConnectionUpdateMessage:
      title: ExternalConnectionUpdateMessage
      type: object
      properties:
        name:
          title: name
          type: string
        type:
          title: type
          type: string
        connectionType:
          title: connectionType
          enum:
            - NONE
            - NHN
            - OTHER
          type: string
        description:
          title: description
          type: string
        employeeUuid:
          title: employeeUuid
          $ref: '#/components/schemas/uuid'
        partnerUuid:
          title: partnerUuid
          $ref: '#/components/schemas/uuid'
        networkUuid:
          title: networkUuid
          $ref: '#/components/schemas/uuid'
        supplierUuid:
          title: supplierUuid
          $ref: '#/components/schemas/uuid'
    FeedbackMessage:
      title: FeedbackMessage
      type: object
      properties:
        email:
          title: email
          type: string
        url:
          title: url
          type: string
        message:
          title: message
          type: string
    FunctionRotationUpdateMessage:
      title: FunctionRotationUpdateMessage
      type: object
      properties:
        employee:
          title: employee
          $ref: '#/components/schemas/uuid'
        day1:
          title: day1
          type: string
        day2:
          title: day2
          type: string
        day3:
          title: day3
          type: string
        day4:
          title: day4
          type: string
        day5:
          title: day5
          type: string
        day6:
          title: day6
          type: string
        day7:
          title: day7
          type: string
        startDate:
          title: startDate
          type: string
          format: date
    FunctionTaskUpdateMessage:
      title: FunctionTaskUpdateMessage
      type: object
      properties:
        name:
          title: name
          type: string
        rrule:
          title: rrule
          type: string
        reminder:
          title: reminder
          enum:
            - NONE
            - AT_START
            - ONE_HOUR_BEFORE
            - TWO_HOURS_BEFORE
            - THREE_HOURS_BEFORE
            - FIVE_HOURS_BEFORE
          type: string
        procedures:
          title: procedures
          type: string
        situation:
          title: situation
          type: string
        functionUuid:
          title: functionUuid
          type: string
        pages:
          title: pages
          type: array
          items:
            title: items
            type: integer
      required:
        - reminder
    FunctionUpdateMessage:
      title: FunctionUpdateMessage
      type: object
      properties:
        responsibility:
          title: responsibility
          type: string
        type:
          title: type
          enum:
            - SINGLE
            - ROTATED
            - SIMULTANEOUS
            - COMMON
          type: string
        description:
          title: description
          type: string
        rotation:
          title: rotation
          type: string
        name:
          title: name
          type: string
        status:
          title: status
          type: string
        category:
          title: category
          type: string
        template:
          title: template
          type: string
        employees:
          title: employees
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
        pages:
          title: pages
          type: array
          items:
            title: items
            type: integer
        rotations:
          title: rotations
          type: array
          items:
            title: items
            $ref: '#/components/schemas/FunctionRotationUpdateMessage'
      required:
        - type
        - rotation
    GuidelineUpdateMessage:
      title: GuidelineUpdateMessage
      type: object
      properties:
        category:
          title: category
          type: string
        template:
          title: template
          type: string
        name:
          title: name
          type: string
        status:
          title: status
          type: string
        content:
          title: content
          type: string
        pages:
          title: pages
          type: array
          items:
            title: items
            type: integer
        classification:
          title: classification
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        accessControl:
          title: accessControl
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
    InvoiceMessage:
      title: InvoiceMessage
      type: object
      properties:
        expires:
          title: expires
          type: string
          format: date
        products:
          title: products
          type: array
          items:
            title: items
            $ref: '#/components/schemas/InvoiceProduct'
        comment:
          title: comment
          type: string
    InvoiceProduct:
      title: InvoiceProduct
      type: object
      properties:
        description:
          title: description
          type: string
        amount:
          title: amount
          type: integer
    IssueSimpleUpdateMessage:
      title: IssueSimpleUpdateMessage
      type: object
      properties:
        description:
          title: description
          type: string
    IssueUpdateMessage:
      title: IssueUpdateMessage
      type: object
      properties:
        notes:
          title: notes
          type: string
        description:
          title: description
          type: string
        identifiedMeasures:
          title: identifiedMeasures
          type: string
        shallEvaluated:
          title: shallEvaluated
          type: boolean
        immediateMeasures:
          title: immediateMeasures
          type: string
        furtherMeasures:
          title: furtherMeasures
          type: string
        name:
          title: name
          type: string
        correction:
          title: correction
          type: string
        registeredBy:
          title: registeredBy
          $ref: '#/components/schemas/uuid'
        reportedTo:
          title: reportedTo
          $ref: '#/components/schemas/uuid'
        reportedBy:
          title: reportedBy
          $ref: '#/components/schemas/uuid'
        responsibleBy:
          title: responsibleBy
          $ref: '#/components/schemas/uuid'
        processedBy:
          title: processedBy
          $ref: '#/components/schemas/uuid'
        evaluatedBy:
          title: evaluatedBy
          $ref: '#/components/schemas/uuid'
        processedDate:
          title: processedDate
          type: string
          format: date
        reportedDate:
          title: reportedDate
          type: string
          format: date
        evaluatedDate:
          title: evaluatedDate
          type: string
          format: date
        eventDate:
          title: eventDate
          type: string
          format: date
        registeredDate:
          title: registeredDate
          type: string
          format: date
        evaluated:
          title: evaluated
          type: boolean
        implementedMeasure:
          title: implementedMeasure
          type: boolean
        reportedLabourInspection:
          title: reportedLabourInspection
          type: boolean
        reportedInspectorate:
          title: reportedInspectorate
          type: boolean
        reportedSafetyManager:
          title: reportedSafetyManager
          type: boolean
        reportedCountyMedical:
          title: reportedCountyMedical
          type: boolean
        informationLeakagePossibility:
          title: informationLeakagePossibility
          type: boolean
        personDamagePossibility:
          title: personDamagePossibility
          type: boolean
        relateToEmployees:
          title: relateToEmployees
          type: boolean
        relateToEquipment:
          title: relateToEquipment
          type: boolean
        relateToPatient:
          title: relateToPatient
          type: boolean
        relateToPatientInstitution:
          title: relateToPatientInstitution
          type: boolean
        relateToRadiation:
          title: relateToRadiation
          type: boolean
        requiresMeasures:
          title: requiresMeasures
          type: boolean
        requireEvaluation:
          title: requireEvaluation
          type: boolean
        measuresSatisfactorily:
          title: measuresSatisfactorily
          type: boolean
        evaluatedOk:
          title: evaluatedOk
          type: boolean
        pages:
          title: pages
          type: array
          items:
            title: items
            type: integer
    IssuesRequest:
      title: IssuesRequest
      description: |
        A request message bean for issue requests IssuesRequest,

        it's used for passing request parameters for several methods
      type: object
      properties:
        uuid:
          title: uuid
          $ref: '#/components/schemas/uuid'
        organizationId:
          title: organizationId
          type: integer
        description:
          title: description
          type: string
    LinkViewModel:
      title: LinkViewModel
      type: object
      properties:
        linkName:
          title: linkName
          type: string
        linkHref:
          title: linkHref
          type: string
        pageId:
          title: pageId
          type: integer
    MessageViewModel:
      title: MessageViewModel
      type: object
      properties:
        message:
          title: message
          type: string
    NetworkUpdateMessage:
      title: NetworkUpdateMessage
      type: object
      properties:
        name:
          title: name
          type: string
        nhnDescription:
          title: nhnDescription
          type: string
        otherDescription:
          title: otherDescription
          type: string
        connectionType:
          title: connectionType
          type: string
        supplierUuid:
          title: supplierUuid
          $ref: '#/components/schemas/uuid'
    OrganizationCreateMessage:
      title: OrganizationCreateMessage
      type: object
      properties:
        firstName:
          title: firstName
          type: string
        lastName:
          title: lastName
          type: string
        invoiceAddress:
          title: invoiceAddress
          type: string
        invoicePostcode:
          title: invoicePostcode
          type: string
        invoiceLocality:
          title: invoiceLocality
          type: string
        organizationName:
          title: organizationName
          type: string
        employeesCount:
          title: employeesCount
          type: integer
        specialTerms:
          title: specialTerms
          enum:
            - NONE
            - DNLF
            - NFF
          type: string
        businessEntityType:
          title: businessEntityType
          type: string
        referralCode:
          title: referralCode
          type: string
    OrganizationSettingsUpdateMessage:
      title: OrganizationSettingsUpdateMessage
      type: object
      properties:
        invoiceAddress:
          title: invoiceAddress
          type: string
        reference:
          title: reference
          type: string
        invoiceReceiver:
          title: invoiceReceiver
          type: string
        ownerEmail:
          title: ownerEmail
          type: string
        invoicePostcode:
          title: invoicePostcode
          type: string
        invoiceLocality:
          title: invoiceLocality
          type: string
        specialTerms:
          title: specialTerms
          enum:
            - NONE
            - DNLF
            - NFF
          type: string
    OrganizationUpdateMessage:
      title: OrganizationUpdateMessage
      type: object
      properties:
        address:
          title: address
          type: string
        notes:
          title: notes
          type: string
        officeAddress:
          title: officeAddress
          type: string
        officePostcode:
          title: officePostcode
          type: string
        email:
          title: email
          type: string
        herNumber:
          title: herNumber
          type: string
        name:
          title: name
          type: string
        businessEntityType:
          title: businessEntityType
          type: string
        organizationNumber:
          title: organizationNumber
          type: string
        mailAddress:
          title: mailAddress
          type: string
        mailPostcode:
          title: mailPostcode
          type: string
        fax:
          title: fax
          type: string
        phone:
          title: phone
          type: string
        type:
          title: type
          type: string
        url:
          title: url
          type: string
        activityCodes:
          title: activityCodes
          type: array
          items:
            title: items
            type: string
    OrganizationViewModel:
      title: OrganizationViewModel
      type: object
      properties:
        organizationId:
          title: organizationId
          type: integer
        href:
          title: href
          type: string
        address:
          title: address
          type: string
        notes:
          title: notes
          type: string
        officeAddress:
          title: officeAddress
          type: string
        officePostcode:
          title: officePostcode
          type: string
        email:
          title: email
          type: string
        herNumber:
          title: herNumber
          type: string
        name:
          title: name
          type: string
        businessEntityType:
          title: businessEntityType
          type: string
        organizationNumber:
          title: organizationNumber
          type: string
        mailAddress:
          title: mailAddress
          type: string
        mailPostcode:
          title: mailPostcode
          type: string
        fax:
          title: fax
          type: string
        phone:
          title: phone
          type: string
        type:
          title: type
          type: string
        url:
          title: url
          type: string
        invoiceReceiver:
          title: invoiceReceiver
          type: string
        invoicePostcode:
          title: invoicePostcode
          type: string
        invoiceLocality:
          title: invoiceLocality
          type: string
        reference:
          title: reference
          type: string
        invoiceAddress:
          title: invoiceAddress
          type: string
        ownerEmail:
          title: ownerEmail
          type: string
        settingsHref:
          title: settingsHref
          type: string
        activityCodes:
          title: activityCodes
          type: array
          items:
            title: items
            type: string
        specialTerms:
          title: specialTerms
          enum:
            - NONE
            - DNLF
            - NFF
          type: string
    PageViewModel:
      title: PageViewModel
      type: object
      properties:
        pageId:
          title: pageId
          type: integer
        name:
          title: name
          type: string
        subPages:
          title: subPages
          type: array
          items:
            title: items
            $ref: '#/components/schemas/PageViewModel'
        helpContent:
          title: helpContent
          type: string
        order:
          title: order
          type: integer
    PartnerUpdateMessage:
      title: PartnerUpdateMessage
      type: object
      properties:
        email:
          title: email
          type: string
        url:
          title: url
          type: string
        notes:
          title: notes
          type: string
        industry:
          title: industry
          type: string
        name:
          title: name
          type: string
        address:
          title: address
          type: string
        phone:
          title: phone
          type: string
        remoteAccess:
          title: remoteAccess
          type: boolean
        physicalAccess:
          title: physicalAccess
          type: boolean
        pageAccess:
          title: pageAccess
          type: boolean
        pages:
          title: pages
          type: array
          items:
            title: items
            type: integer
    PasswordRequest:
      title: PasswordRequest
      type: object
      properties:
        user:
          title: user
          type: string
    QualityReviewIndicatorUpdateMessage:
      title: QualityReviewIndicatorUpdateMessage
      type: object
      properties:
        assessment:
          title: assessment
          type: string
        approved:
          title: approved
          type: boolean
        name:
          title: name
          type: string
    QualityReviewMainGoalUpdateMessage:
      title: QualityReviewMainGoalUpdateMessage
      type: object
      properties:
        name:
          title: name
          type: string
        description:
          title: description
          type: string
    QualityReviewSubGoalUpdateMessage:
      title: QualityReviewSubGoalUpdateMessage
      type: object
      properties:
        name:
          title: name
          type: string
        person:
          title: person
          $ref: '#/components/schemas/uuid'
    QualityUpdateMessage:
      title: QualityUpdateMessage
      type: object
      properties:
        name:
          title: name
          type: string
    ReferenceViewModel:
      title: ReferenceViewModel
      type: object
      properties:
        groupName:
          title: groupName
          type: string
        pages:
          title: pages
          type: array
          items:
            title: items
            $ref: '#/components/schemas/LinkViewModel'
    ReportUpdateMessage:
      title: ReportUpdateMessage
      type: object
      properties:
        name:
          title: name
          type: string
        content:
          title: content
          type: string
        reportDate:
          title: reportDate
          type: string
          format: date
        employee:
          title: employee
          $ref: '#/components/schemas/uuid'
        pages:
          title: pages
          type: array
          items:
            title: items
            type: integer
        classification:
          title: classification
          default: NONE
          enum:
            - NONE
            - CONFIDENTIAL
            - PRIVATE
          type: string
        accessControl:
          title: accessControl
          type: array
          items:
            title: items
            $ref: '#/components/schemas/uuid'
    RevisionDifference:
      title: RevisionDifference
      type: object
      properties:
        fromCurrentToSelf:
          title: fromCurrentToSelf
          type: string
        fromSelfToCurrent:
          title: fromSelfToCurrent
          type: string
    RevisionDifferences:
      title: RevisionDifferences
      type: object
      properties:
        name:
          title: name
          $ref: '#/components/schemas/RevisionDifference'
        content:
          title: content
          $ref: '#/components/schemas/RevisionDifference'
    RevisionViewModel:
      title: RevisionViewModel
      type: object
      properties:
        revisionId:
          title: revisionId
          type: integer
        name:
          title: name
          type: string
        content:
          title: content
          type: string
        dateTime:
          title: dateTime
          type: string
        changedBy:
          title: changedBy
          type: string
        status:
          title: status
          type: string
        differences:
          title: differences
          $ref: '#/components/schemas/RevisionDifferences'
    RiskAssessmentUpdateMessage:
      title: RiskAssessmentUpdateMessage
      type: object
      properties:
        description:
          title: description
          type: string
        responsibleBy:
          title: responsibleBy
          $ref: '#/components/schemas/uuid'
        probability:
          title: probability
          type: integer
        consequence:
          title: consequence
          type: integer
        riskDescription:
          title: riskDescription
          type: string
        measures:
          title: measures
          type: string
        assessmentDate:
          title: assessmentDate
          type: string
          format: date
        violatesInformationSecurityRequirements:
          title: violatesInformationSecurityRequirements
          type: boolean
        violatesIntegrityRequirement:
          title: violatesIntegrityRequirement
          type: boolean
        violatesConfidentialityRequirement:
          title: violatesConfidentialityRequirement
          type: boolean
        violatesNonRepudiationRequirement:
          title: violatesNonRepudiationRequirement
          type: boolean
        violatesAvailabilityRequirement:
          title: violatesAvailabilityRequirement
          type: boolean
        determinedBy:
          title: determinedBy
          $ref: '#/components/schemas/uuid'
        name:
          title: name
          type: string
        pages:
          title: pages
          type: array
          items:
            title: items
            type: integer
    ScheduledTimeMessage:
      title: ScheduledTimeMessage
      description: >
        Used by time jobs, wrap a single property 'scheduledTime' representing a
        job fire time,


        the value of scheduledTime should be in format 'yyyy-MM-dd HH:mm:ss'
      type: object
      properties:
        scheduledTime:
          title: scheduledTime
          type: string
          format: date-time
        organizationId:
          title: organizationId
          type: integer
    SearchResultHit:
      title: SearchResultHit
      type: object
      properties:
        id:
          title: id
          type: string
        entity:
          title: entity
          type: string
        description:
          title: description
          type: string
    TokenResult:
      title: TokenResult
      type: object
      properties:
        email:
          title: email
          type: string
    TokenViewModel:
      title: TokenViewModel
      type: object
      properties:
        id:
          title: id
          $ref: '#/components/schemas/uuid'
        description:
          title: description
          type: string
    TransferMessage:
      title: TransferMessage
      type: object
      properties:
        upgradeUnchangedTemplates:
          title: upgradeUnchangedTemplates
          type: boolean
        upgradeChangedTemplates:
          title: upgradeChangedTemplates
          type: boolean
    UserCreateMessage:
      title: UserCreateMessage
      type: object
      properties:
        email:
          title: email
          type: string
        password:
          title: email
          type: string
    EmployeeSummariesUpdateMessage:
      title: UserCreateMessage
      type: object
      properties:
        summaries:
          title: summaries
          enum:
            - NONE
            - ALL
            - SCHEDULED
          type: string
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes: {}
  links: {}
  callbacks: {}
